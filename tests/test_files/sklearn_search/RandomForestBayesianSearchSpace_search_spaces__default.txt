[({
'model': Categorical(categories=(RandomForestClassifier(n_estimators=500),), prior=None),
'model__max_features': Real(low=0.01, high=0.95, prior='uniform', transform='identity'),
'model__max_depth': Integer(low=1, high=100, prior='uniform', transform='identity'),
'model__min_samples_split': Integer(low=2, high=50, prior='uniform', transform='identity'),
'model__min_samples_leaf': Integer(low=1, high=50, prior='uniform', transform='identity'),
'model__max_samples': Real(low=0.5, high=1.0, prior='uniform', transform='identity'),
'model__criterion': Categorical(categories=('gini',
'entropy'), prior=None),
'prep__numeric__imputer__transformer': Categorical(categories=(SimpleImputer(), SimpleImputer(strategy='median'), SimpleImputer(strategy='most_frequent')), prior=None),
'prep__numeric__scaler__transformer': Categorical(categories=(None,), prior=None),
'prep__non_numeric__encoder__transformer': Categorical(categories=(OneHotEncoder(handle_unknown='ignore'), CustomOrdinalEncoder()), prior=None)
}, 50),
({
'model': Categorical(categories=(RandomForestClassifier(n_estimators=500),), prior=None),
'prep__numeric__imputer__transformer': Categorical(categories=(SimpleImputer(),), prior=None),
'prep__numeric__scaler__transformer': Categorical(categories=(None,), prior=None),
'prep__non_numeric__encoder__transformer': Categorical(categories=(OneHotEncoder(handle_unknown='ignore'),), prior=None)
}, 1)]