description: BayesSearchCV using ClassifierSearchSpace
cross_validation_type: <class 'skopt.searchcv.BayesSearchCV'>
higher_score_is_better: true
number_of_splits: 3
score_names:
- roc_auc
parameter_names:
- model
- model__C
- model__max_depth
- model__n_estimators
- model__learning_rate
- model__colsample_bytree
- model__subsample
- prep__numeric__imputer__transformer
- prep__numeric__scaler__transformer
- prep__non_numeric__encoder__transformer
parameter_names_mapping:
  model: model
  model__C: C
  model__max_depth: max_depth
  model__n_estimators: n_estimators
  model__learning_rate: learning_rate
  model__colsample_bytree: colsample_bytree
  model__subsample: subsample
  prep__numeric__imputer__transformer: imputer
  prep__numeric__scaler__transformer: scaler
  prep__non_numeric__encoder__transformer: encoder
test_score_rankings:
  roc_auc:
  - 2
  - 1
  - 7
  - 5
  - 3
  - 6
  - 10
  - 9
  - 8
  - 4
test_score_averages:
  roc_auc:
  - 0.7427456659255212
  - 0.75387315795733
  - 0.7006373739126927
  - 0.7327841694676938
  - 0.7379920540760444
  - 0.7239086241960179
  - 0.6816700035690205
  - 0.6959068865753929
  - 0.6994745112943622
  - 0.735096790312212
test_score_standard_deviations:
  roc_auc:
  - 0.024481247364386654
  - 0.022099896967519315
  - 0.01607478163590566
  - 0.014730438292324066
  - 0.028843662270525483
  - 0.011499010835336438
  - 0.01659637798509187
  - 0.031694606670385865
  - 0.0029342631029570776
  - 0.012722980402300629
trials:
- model: LogisticRegression(...)
  model__C: 11.655266791092009
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 22.375882528244357
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 2.3712235042499274e-05
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 0.0031932541960563612
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 32.730896501169475
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: XGBClassifier(...)
  model__colsample_bytree: 0.7776107350396038
  model__learning_rate: 0.11411665025720713
  model__max_depth: 9
  model__n_estimators: 613
  model__subsample: 0.6351580315781546
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bytree: 0.9208091341729433
  model__learning_rate: 0.15397534404304786
  model__max_depth: 9
  model__n_estimators: 358
  model__subsample: 0.14602109830934662
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bytree: 0.7036152301751524
  model__learning_rate: 0.26277905925433237
  model__max_depth: 6
  model__n_estimators: 412
  model__subsample: 0.29027285854677665
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bytree: 0.819651719467114
  model__learning_rate: 0.22497199586672792
  model__max_depth: 5
  model__n_estimators: 600
  model__subsample: 0.3472433639518757
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bytree: 0.3648967073476305
  model__learning_rate: 0.15108900152803043
  model__max_depth: 7
  model__n_estimators: 395
  model__subsample: 0.7474387830916179
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
timings:
  fit time averages:
  - 0.04614384969075521
  - 0.08661794662475586
  - 0.04852477709452311
  - 0.043944597244262695
  - 0.048941612243652344
  - 0.4345339934031169
  - 0.1730180581410726
  - 0.3205265204111735
  - 0.5139079888661703
  - 0.23525293668111166
  fit time standard deviations:
  - 0.004035150736665564
  - 0.040039796554815224
  - 0.00040655437991046826
  - 0.0006599787160619627
  - 0.009313607129998227
  - 0.014481020040582195
  - 0.001040764330434858
  - 0.002655460184746678
  - 0.003185532695893194
  - 0.0025500347129072966
  score time averages:
  - 0.009175380071004232
  - 0.009187459945678711
  - 0.0216064453125
  - 0.021558761596679688
  - 0.008520364761352539
  - 0.028996706008911133
  - 0.026987234751383465
  - 0.014128367106119791
  - 0.01358811060587565
  - 0.028384685516357422
  score time standard deviations:
  - 0.0005349097568256718
  - 0.00039582443692560103
  - 1.765907686914559e-05
  - 0.00039350743920419273
  - 0.0003661999166837025
  - 0.0009480988122512909
  - 0.00024074628795051664
  - 0.0010275307177059663
  - 0.00037599561537195013
  - 0.00017644392420550564
