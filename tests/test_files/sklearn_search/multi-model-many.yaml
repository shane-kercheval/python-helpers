description: BayesSearchCV using ClassifierSearchSpace
cross_validation_type: <class 'skopt.searchcv.BayesSearchCV'>
higher_score_is_better: true
number_of_splits: 10
score_names:
- roc_auc
parameter_names:
- model
- model__max_features
- model__max_depth
- model__min_samples_split
- model__min_samples_leaf
- model__max_samples
- model__criterion
- model__C
- model__learning_rate
- model__n_estimators
- model__min_child_weight
- model__subsample
- model__colsample_bytree
- model__colsample_bylevel
- model__reg_alpha
- model__reg_lambda
- prep__numeric__imputer__transformer
- prep__numeric__scaler__transformer
- prep__non_numeric__encoder__transformer
parameter_names_mapping:
  model: model
  model__max_features: max_features
  model__max_depth: max_depth
  model__min_samples_split: min_samples_split
  model__min_samples_leaf: min_samples_leaf
  model__max_samples: max_samples
  model__criterion: criterion
  model__C: C
  model__learning_rate: learning_rate
  model__n_estimators: n_estimators
  model__min_child_weight: min_child_weight
  model__subsample: subsample
  model__colsample_bytree: colsample_bytree
  model__colsample_bylevel: colsample_bylevel
  model__reg_alpha: reg_alpha
  model__reg_lambda: reg_lambda
  prep__numeric__imputer__transformer: imputer
  prep__numeric__scaler__transformer: scaler
  prep__non_numeric__encoder__transformer: encoder
test_score_rankings:
  roc_auc:
  - 187
  - 172
  - 188
  - 84
  - 154
  - 152
  - 202
  - 181
  - 145
  - 139
  - 168
  - 102
  - 71
  - 190
  - 192
  - 194
  - 74
  - 163
  - 166
  - 76
  - 103
  - 210
  - 37
  - 49
  - 199
  - 158
  - 21
  - 78
  - 33
  - 193
  - 165
  - 83
  - 25
  - 183
  - 57
  - 72
  - 140
  - 185
  - 34
  - 196
  - 138
  - 143
  - 29
  - 48
  - 159
  - 225
  - 80
  - 19
  - 45
  - 105
  - 216
  - 171
  - 207
  - 234
  - 198
  - 131
  - 104
  - 206
  - 201
  - 219
  - 170
  - 56
  - 217
  - 135
  - 155
  - 208
  - 150
  - 73
  - 125
  - 245
  - 218
  - 246
  - 55
  - 82
  - 121
  - 63
  - 100
  - 215
  - 212
  - 92
  - 60
  - 27
  - 5
  - 30
  - 2
  - 67
  - 77
  - 79
  - 59
  - 52
  - 81
  - 10
  - 39
  - 12
  - 6
  - 130
  - 17
  - 42
  - 1
  - 18
  - 66
  - 129
  - 111
  - 176
  - 223
  - 197
  - 122
  - 180
  - 88
  - 46
  - 9
  - 43
  - 149
  - 189
  - 167
  - 3
  - 156
  - 14
  - 148
  - 51
  - 141
  - 26
  - 86
  - 108
  - 32
  - 8
  - 85
  - 118
  - 146
  - 116
  - 95
  - 44
  - 93
  - 137
  - 98
  - 120
  - 133
  - 106
  - 23
  - 61
  - 178
  - 7
  - 13
  - 175
  - 127
  - 160
  - 20
  - 75
  - 220
  - 173
  - 244
  - 238
  - 64
  - 240
  - 228
  - 241
  - 195
  - 239
  - 247
  - 191
  - 96
  - 31
  - 242
  - 209
  - 110
  - 236
  - 226
  - 41
  - 243
  - 101
  - 15
  - 53
  - 65
  - 151
  - 38
  - 69
  - 16
  - 11
  - 54
  - 153
  - 22
  - 50
  - 119
  - 47
  - 62
  - 28
  - 126
  - 107
  - 128
  - 36
  - 40
  - 24
  - 147
  - 87
  - 58
  - 68
  - 35
  - 97
  - 4
  - 70
  - 205
  - 186
  - 231
  - 235
  - 230
  - 157
  - 229
  - 237
  - 203
  - 233
  - 248
  - 124
  - 248
  - 248
  - 184
  - 142
  - 113
  - 200
  - 232
  - 89
  - 221
  - 174
  - 227
  - 182
  - 115
  - 99
  - 211
  - 94
  - 91
  - 213
  - 224
  - 169
  - 117
  - 144
  - 204
  - 112
  - 179
  - 90
  - 214
  - 132
  - 123
  - 114
  - 134
  - 136
  - 161
  - 162
  - 222
  - 164
  - 109
  - 177
test_score_averages:
  roc_auc:
  - 0.7408329954924979
  - 0.7491115186455396
  - 0.7405890688717915
  - 0.7640374092276463
  - 0.7536433625373882
  - 0.7545449710074144
  - 0.7328467871259725
  - 0.7441256353876156
  - 0.7559074656450997
  - 0.7568886103081482
  - 0.7494855199068388
  - 0.7625598276376013
  - 0.7655925819676541
  - 0.739204593353144
  - 0.7367652418224251
  - 0.7359408664987666
  - 0.7649431744777672
  - 0.7511067664943457
  - 0.7499004905112372
  - 0.7648295592761488
  - 0.7625449792871091
  - 0.7285082902389097
  - 0.7686565287045695
  - 0.767247571401227
  - 0.733525824401797
  - 0.7529635049369624
  - 0.7715630514483355
  - 0.7648069202284635
  - 0.7689632473314584
  - 0.7360272061738818
  - 0.750041014346561
  - 0.7643231051199113
  - 0.7706573132936624
  - 0.7430764943534637
  - 0.7667016205689864
  - 0.7653608687871072
  - 0.7567668043782179
  - 0.7423297437714625
  - 0.7689251786395915
  - 0.7357950663030244
  - 0.7570107522244987
  - 0.7564649995971285
  - 0.7696230136899208
  - 0.7672550339561456
  - 0.7528939936724566
  - 0.7200948929743667
  - 0.7645058615141076
  - 0.7716587130822358
  - 0.7676224728898396
  - 0.7625138041513827
  - 0.7263532030576944
  - 0.7492183470979039
  - 0.730728732424748
  - 0.7018307569459659
  - 0.7353586298878679
  - 0.7585129686493399
  - 0.7625249989272618
  - 0.730984516025632
  - 0.7332789344130605
  - 0.7245146397899067
  - 0.7492520608384569
  - 0.7667652588523721
  - 0.7251270570680037
  - 0.7574224649266698
  - 0.7532801430207218
  - 0.729675765866433
  - 0.7551947021093619
  - 0.764965822623502
  - 0.7593548008940783
  - 0.5757217141891037
  - 0.7248423537565254
  - 0.5751313491161126
  - 0.7668772197465961
  - 0.7644712919774936
  - 0.7602303458891922
  - 0.7663049833756724
  - 0.7627059107164895
  - 0.726470057728102
  - 0.7277155498613865
  - 0.7634115106001648
  - 0.7664035879001582
  - 0.7696462534901506
  - 0.7749639668759487
  - 0.7694169000315856
  - 0.7766760415185044
  - 0.7660230893261329
  - 0.7648251731680732
  - 0.7646787398255734
  - 0.7665228148962349
  - 0.767146395240181
  - 0.7644799146581375
  - 0.7727614354626884
  - 0.768474533055494
  - 0.7725164849493035
  - 0.7744355264211655
  - 0.7586291430778862
  - 0.7718536513527654
  - 0.7682924588734421
  - 0.7785470802977034
  - 0.7716607204535455
  - 0.7660255937528639
  - 0.7587049303599173
  - 0.7618912453563377
  - 0.7459630962562183
  - 0.7203345300837121
  - 0.7356995963340941
  - 0.7600199141930479
  - 0.7442427123603211
  - 0.7637618551720677
  - 0.7675900626518961
  - 0.7728479858942983
  - 0.7681837304104074
  - 0.7552484899310954
  - 0.7402966486576468
  - 0.7495820028263277
  - 0.7752325615377952
  - 0.7530805795192668
  - 0.7722515903205117
  - 0.7556600770301519
  - 0.7671962331649722
  - 0.7567296809669061
  - 0.7699291393648074
  - 0.763878110818937
  - 0.7622230156405496
  - 0.7691225219253728
  - 0.7734844261871545
  - 0.7639809816896196
  - 0.7610625296091728
  - 0.7558886586799337
  - 0.7613635442219555
  - 0.7631196172394563
  - 0.767646220410847
  - 0.7631788288220277
  - 0.7571832461891285
  - 0.7628148651959412
  - 0.7605638778961905
  - 0.7577423300544975
  - 0.7625097643441359
  - 0.7712917370994994
  - 0.766366295166817
  - 0.7455698229794198
  - 0.7739047975439385
  - 0.7722990907096509
  - 0.7480821603471596
  - 0.7591454286892392
  - 0.7522831862087531
  - 0.7715990836127432
  - 0.7648936466858152
  - 0.7235701168414096
  - 0.7487421382846984
  - 0.5898817310409064
  - 0.6666997594591532
  - 0.7662930376540233
  - 0.6491016536576361
  - 0.7095736137486264
  - 0.6479048960776295
  - 0.7358690398310411
  - 0.6651056668234407
  - 0.5719349902771934
  - 0.7377635023373565
  - 0.7630831424891301
  - 0.7691344548717676
  - 0.6463768962775776
  - 0.7287404604032328
  - 0.7621023336360734
  - 0.6754379423331208
  - 0.7180710050158692
  - 0.7684236134742563
  - 0.6328520833095179
  - 0.7626813006342341
  - 0.7722364853650763
  - 0.7670182874968974
  - 0.7661342494290801
  - 0.7549842720286699
  - 0.768541811577769
  - 0.765946034854139
  - 0.7718679188669569
  - 0.7727533536812128
  - 0.7669104599261916
  - 0.754161803883679
  - 0.7714860596503572
  - 0.7672304240663668
  - 0.7605844475089049
  - 0.7674190281330877
  - 0.7663622322835428
  - 0.7696327059233182
  - 0.7592072461484061
  - 0.7624278720853874
  - 0.7589706136468275
  - 0.7687717890415462
  - 0.7684701348669168
  - 0.7711092292167265
  - 0.7557798178226308
  - 0.7638440835478104
  - 0.7666562025441982
  - 0.7660187071122699
  - 0.7688675496215385
  - 0.7630708586912215
  - 0.7751182727731951
  - 0.7656418689844475
  - 0.7318885417072742
  - 0.7410777207224699
  - 0.7033532748199114
  - 0.6947120866183556
  - 0.7082125984188556
  - 0.7530410381402671
  - 0.7089581060964412
  - 0.6728714891455875
  - 0.7327419803553509
  - 0.702442111919042
  - 0.5
  - 0.7595372502973621
  - 0.5
  - 0.5
  - 0.7430159411494537
  - 0.7566807680006092
  - 0.7617515215841476
  - 0.7334314603812659
  - 0.7027927996903076
  - 0.7636942773350047
  - 0.7223709508789927
  - 0.7482034315234388
  - 0.7177082879813345
  - 0.7436735946308128
  - 0.7614238244803924
  - 0.7627748731096495
  - 0.7279323465428117
  - 0.7631208111977313
  - 0.7636234325555201
  - 0.7276918612202639
  - 0.7201112660219336
  - 0.7494509787150766
  - 0.7610942551401859
  - 0.7564336457935396
  - 0.7326560379851703
  - 0.7618511914371038
  - 0.7444248654492516
  - 0.7636841596095798
  - 0.7266171325150292
  - 0.7583235014185837
  - 0.7600057130760721
  - 0.761479552803753
  - 0.7577043363878883
  - 0.7573700353667283
  - 0.7521227851644102
  - 0.7513214919159694
  - 0.7207983117262513
  - 0.7509941272630012
  - 0.7621111239165629
  - 0.7458408592697062
test_score_standard_deviations:
  roc_auc:
  - 0.0403025821802162
  - 0.03216362482047098
  - 0.04227128354448647
  - 0.041783584780063776
  - 0.050712365375367593
  - 0.04653641002393645
  - 0.02868755340241787
  - 0.02814701186618101
  - 0.03226997276414842
  - 0.0468495113888674
  - 0.031162869007369358
  - 0.037878631776596415
  - 0.02823737154047796
  - 0.03717687536672769
  - 0.02840930179510283
  - 0.03157113164889208
  - 0.03233009308257751
  - 0.030216557862078042
  - 0.03126866436832499
  - 0.04843798779517194
  - 0.025104255835120486
  - 0.03678877950880793
  - 0.04127395890124707
  - 0.026214809046043442
  - 0.02958947118526549
  - 0.03631868358851339
  - 0.024718535507841602
  - 0.03260404026475667
  - 0.034159799935936166
  - 0.04144319376540628
  - 0.026641007954864262
  - 0.03856508217622234
  - 0.04011554542051268
  - 0.027465966172680333
  - 0.029281067974931557
  - 0.03883707568251364
  - 0.030225743678549674
  - 0.03492596651399447
  - 0.03767965707788766
  - 0.020040399002198617
  - 0.029728912387616307
  - 0.027111478929432654
  - 0.02575560238802336
  - 0.02934143803156952
  - 0.0378789504225088
  - 0.04194149540537989
  - 0.03944261471836938
  - 0.03152036489983888
  - 0.04069506353386104
  - 0.03692048855812039
  - 0.04257010735631138
  - 0.04517988922787854
  - 0.028261186939649362
  - 0.031087695432753575
  - 0.04313700983206676
  - 0.03652944757157279
  - 0.018669951747371464
  - 0.03645030499692625
  - 0.02532079135236085
  - 0.04976847582682892
  - 0.05502653727342997
  - 0.043603289643174115
  - 0.03888972435373921
  - 0.028475194915078418
  - 0.038000444795741946
  - 0.02790441823361236
  - 0.024676735512685365
  - 0.05202046931460238
  - 0.03966926017725602
  - 0.04618006562347093
  - 0.02843769189458089
  - 0.05559812867765269
  - 0.03505477051410708
  - 0.046072473118852174
  - 0.03413285561034199
  - 0.043354095053238804
  - 0.029723023330504483
  - 0.040931477616008426
  - 0.023451953335962464
  - 0.034287836151493445
  - 0.026454396283244676
  - 0.0410489075408375
  - 0.05521788034177835
  - 0.036282458086078405
  - 0.029274541343132555
  - 0.0335727419692297
  - 0.017779979613534957
  - 0.04195968425784837
  - 0.03415145470287776
  - 0.04602898986850242
  - 0.04403467319227048
  - 0.028776367236510926
  - 0.021669502128441355
  - 0.036550766675277124
  - 0.036851051545301765
  - 0.042145078027794075
  - 0.030923296649792063
  - 0.03473182690389537
  - 0.034339983347117256
  - 0.032044006508394854
  - 0.04346430902298248
  - 0.026803964404425316
  - 0.030590395360766163
  - 0.05259843413026537
  - 0.034064905819472115
  - 0.013990188037098993
  - 0.04379357621084442
  - 0.030462599012073044
  - 0.014125995934877475
  - 0.02477150502566668
  - 0.02328399784669971
  - 0.04443630384221302
  - 0.04238865461378737
  - 0.03475595404451375
  - 0.03729797770345415
  - 0.034495506033573486
  - 0.02431438111835359
  - 0.035438135741280734
  - 0.023225272483482568
  - 0.03824298789318403
  - 0.024081151165346423
  - 0.04179924951986636
  - 0.030377994150511126
  - 0.030139622320937802
  - 0.04919011828012697
  - 0.01583797852900657
  - 0.030454749645542553
  - 0.03809604902271795
  - 0.0412431099704379
  - 0.017218616132194407
  - 0.029807294766446703
  - 0.03077355606650187
  - 0.027736028178388706
  - 0.03338523526626044
  - 0.030196794780356053
  - 0.041780816112519686
  - 0.04641822419732188
  - 0.03499064525815983
  - 0.03139259335082762
  - 0.04633149718931008
  - 0.029742336685891022
  - 0.03825050602360418
  - 0.04995322091752932
  - 0.020583682533224956
  - 0.05218641456264411
  - 0.043825484387530485
  - 0.04386085584433606
  - 0.03741091927395201
  - 0.018451124853747357
  - 0.05273533666128131
  - 0.05111635957044222
  - 0.04215391455524297
  - 0.03993259308680992
  - 0.062166055023706576
  - 0.041581681588698446
  - 0.06721007319600743
  - 0.031590390702423636
  - 0.034909453861639156
  - 0.05762226846178226
  - 0.028415037109270635
  - 0.03583359489451482
  - 0.037835029996190116
  - 0.06046371717627257
  - 0.03724535710357125
  - 0.03209267678290951
  - 0.04599503001608003
  - 0.05068845672962671
  - 0.024857305971562566
  - 0.041754325627607475
  - 0.0250612084629874
  - 0.03495522282765046
  - 0.03716140116476256
  - 0.03423197463929581
  - 0.04130020202189432
  - 0.03326067000865778
  - 0.0361697038776484
  - 0.027975420609541665
  - 0.03148889285350275
  - 0.05118368425518463
  - 0.027096894837214454
  - 0.04925614526274902
  - 0.04498756715316394
  - 0.01880448019371401
  - 0.045950711410624234
  - 0.025301630001983266
  - 0.046827321250776634
  - 0.02284737061225789
  - 0.038500062633605316
  - 0.03569272349447561
  - 0.03995962629633314
  - 0.025284348651506847
  - 0.023100699155940478
  - 0.03631021179198881
  - 0.03192299291889351
  - 0.028668678879063655
  - 0.032969611045964145
  - 0.041119800823041765
  - 0.03820562336872056
  - 0.03767450682849112
  - 0.03590863676104562
  - 0.04201487085693186
  - 0.027251402150938606
  - 0.029880056832466875
  - 0.03699701698274305
  - 0.040259899466093055
  - 0.016425375212767244
  - 0.05217571711366378
  - 0.04065317569396915
  - 0.03137286651165559
  - 0.026364409669535512
  - 0.0
  - 0.031067232929266
  - 0.0
  - 0.0
  - 0.03155122580085214
  - 0.03256221882678937
  - 0.04780885607462806
  - 0.03564597897157567
  - 0.03498862247581948
  - 0.033859624075463
  - 0.03215248621182012
  - 0.035352787161335386
  - 0.03839319330913486
  - 0.025542665301685682
  - 0.028889883899491372
  - 0.05153350818419489
  - 0.03080873777826898
  - 0.022230323100473577
  - 0.03222968057652042
  - 0.02483460248177519
  - 0.03978380991275931
  - 0.033839125516111804
  - 0.04018471478016793
  - 0.05357260191055369
  - 0.036478108405944024
  - 0.0432862174400423
  - 0.03870991645093681
  - 0.026043149009596853
  - 0.04255328225182254
  - 0.02560245517109164
  - 0.02893298451032663
  - 0.04429929534240729
  - 0.02946211742603726
  - 0.037816891031711555
  - 0.034308776250083134
  - 0.028106806890807686
  - 0.01878826186505814
  - 0.03346654690946151
  - 0.04572047343326011
  - 0.038566352602366974
trials:
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 53
  model__max_features: 0.682770466380611
  model__max_samples: 0.9519260362533433
  model__min_samples_leaf: 36
  model__min_samples_split: 22
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 17
  model__max_features: 0.18711977425950435
  model__max_samples: 0.9002516157283724
  model__min_samples_leaf: 19
  model__min_samples_split: 24
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 37
  model__max_features: 0.8318657776143903
  model__max_samples: 0.796309837652784
  model__min_samples_leaf: 30
  model__min_samples_split: 33
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 50
  model__max_features: 0.797397050836895
  model__max_samples: 0.6620299911421869
  model__min_samples_leaf: 4
  model__min_samples_split: 29
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 87
  model__max_features: 0.4008718223246863
  model__max_samples: 0.6905323823987464
  model__min_samples_leaf: 11
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 74
  model__max_features: 0.2492810023922022
  model__max_samples: 0.7893321681141925
  model__min_samples_leaf: 14
  model__min_samples_split: 17
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 49
  model__max_features: 0.49180611808491104
  model__max_samples: 0.6816015479755677
  model__min_samples_leaf: 36
  model__min_samples_split: 32
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 96
  model__max_features: 0.29997689949170153
  model__max_samples: 0.7455551022408218
  model__min_samples_leaf: 20
  model__min_samples_split: 21
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 85
  model__max_features: 0.36238465000657355
  model__max_samples: 0.8987194012367643
  model__min_samples_leaf: 10
  model__min_samples_split: 5
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 25
  model__max_features: 0.4734820214585714
  model__max_samples: 0.6308684032130806
  model__min_samples_leaf: 6
  model__min_samples_split: 48
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 80
  model__max_features: 0.95
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 83
  model__max_features: 0.4887964682691186
  model__max_samples: 0.5
  model__min_samples_leaf: 1
  model__min_samples_split: 22
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 49
  model__max_features: 0.3285820377415821
  model__max_samples: 0.9697495925293971
  model__min_samples_leaf: 1
  model__min_samples_split: 10
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 1
  model__max_features: 0.8814828874165372
  model__max_samples: 0.9503414495830436
  model__min_samples_leaf: 1
  model__min_samples_split: 17
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 13
  model__max_features: 0.35411983065637204
  model__max_samples: 0.9345677752567225
  model__min_samples_leaf: 50
  model__min_samples_split: 49
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 1
  model__max_features: 0.9296424351806778
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 9
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 58
  model__max_features: 0.01
  model__max_samples: 0.8591981852835175
  model__min_samples_leaf: 1
  model__min_samples_split: 11
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 66
  model__max_features: 0.95
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 7
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 62
  model__max_features: 0.95
  model__max_samples: 0.5
  model__min_samples_leaf: 1
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 56
  model__max_features: 0.28765483204138687
  model__max_samples: 0.7639581196869188
  model__min_samples_leaf: 1
  model__min_samples_split: 34
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.4563981489847337
  model__max_samples: 0.7151880712533107
  model__min_samples_leaf: 1
  model__min_samples_split: 29
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 1
  model__max_features: 0.8407360249211452
  model__max_samples: 0.5725249203257339
  model__min_samples_leaf: 1
  model__min_samples_split: 17
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 50
  model__max_features: 0.11798068442236062
  model__max_samples: 0.9465143633978903
  model__min_samples_leaf: 1
  model__min_samples_split: 37
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 89
  model__max_features: 0.01
  model__max_samples: 0.9012061878358323
  model__min_samples_leaf: 1
  model__min_samples_split: 41
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.95
  model__max_samples: 0.9058470195817517
  model__min_samples_leaf: 50
  model__min_samples_split: 14
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 48
  model__max_features: 0.32400522488710515
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 42
  model__max_features: 0.01
  model__max_samples: 0.5
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 43
  model__max_features: 0.07591173933901155
  model__max_samples: 0.9489678274632075
  model__min_samples_leaf: 11
  model__min_samples_split: 48
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 61
  model__max_features: 0.01
  model__max_samples: 0.5
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 1
  model__max_features: 0.27871454348754654
  model__max_samples: 0.783487679818081
  model__min_samples_leaf: 50
  model__min_samples_split: 8
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 34
  model__max_features: 0.9336974409622576
  model__max_samples: 0.6956765042083076
  model__min_samples_leaf: 6
  model__min_samples_split: 49
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 46
  model__max_features: 0.01
  model__max_samples: 0.7624719116669084
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 52
  model__max_features: 0.23919708157274078
  model__max_samples: 0.5
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 1
  model__max_features: 0.01
  model__max_samples: 0.6422121651075534
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 99
  model__max_features: 0.05011109578293145
  model__max_samples: 0.7618300519177568
  model__min_samples_leaf: 1
  model__min_samples_split: 41
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 55
  model__max_features: 0.01
  model__max_samples: 0.5
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 43
  model__max_features: 0.06902689121159945
  model__max_samples: 0.5024808920796618
  model__min_samples_leaf: 18
  model__min_samples_split: 39
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 50
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 0.7104426517728846
  model__min_samples_leaf: 1
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 64
  model__max_features: 0.016323722288896295
  model__max_samples: 0.8278795677589978
  model__min_samples_leaf: 50
  model__min_samples_split: 12
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 0.7158243918774866
  model__min_samples_leaf: 1
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 100
  model__max_features: 0.10180694249531401
  model__max_samples: 0.7272945242784377
  model__min_samples_leaf: 13
  model__min_samples_split: 49
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 47
  model__max_features: 0.01
  model__max_samples: 0.5
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 78
  model__max_features: 0.036154175775207895
  model__max_samples: 0.5683313352311468
  model__min_samples_leaf: 1
  model__min_samples_split: 42
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 3
  model__max_features: 0.011292908295405659
  model__max_samples: 0.5352022519495521
  model__min_samples_leaf: 27
  model__min_samples_split: 3
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 1
  model__max_features: 0.95
  model__max_samples: 0.8860307093390862
  model__min_samples_leaf: 36
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 42
  model__max_features: 0.2426774732502122
  model__max_samples: 0.7733879946713176
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 70
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 0.9618547411345797
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: ExtraTreesClassifier(...)
  model__criterion: gini
  model__max_depth: 33
  model__max_features: 0.020671874059424465
  model__max_samples: 0.6255340433816545
  model__min_samples_leaf: 5
  model__min_samples_split: 3
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 0.11050734833220796
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 2.3637275726622057e-06
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 7.097411092472356
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 8.497573077546403e-06
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 0.019198473016173074
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 80.08489830558847
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.03029122234160651
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 9.46116457989142
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 35.370981915459254
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 0.00019839591935906576
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 100.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 0.013449251264873093
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.000595359314025688
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 100.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 14.639520570910319
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 1.4034158704768943e-06
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 99.78441185627352
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.12150339714978561
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 1.911700200341816
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 1.0e-06
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 100.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 1.0e-06
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 0.23685927079165425
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression(...)
  model__C: 1.308386198100965
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 0.5518581750158322
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.8905560203006863
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 0.560893118312729
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 0.022462730284886538
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 1.0e-06
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 1.2625468738772982
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: LogisticRegression(...)
  model__C: 0.14246417867639896
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13372931324123008
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.1373223935309154
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.1344939147482279
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.1322165591850243
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.12478684306577423
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.1318734001879867
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13177370111783923
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.135623903320982
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13499038319146628
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13380085055409266
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13341396172905667
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13276726684209073
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13025746628420962
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.1298175843417688
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.12810776004096966
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13483735235039407
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13326627463004187
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.1321714160260592
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression(...)
  model__C: 0.13227162846517612
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 23
  model__max_features: 0.21136792888628345
  model__max_samples: 0.6775104656182822
  model__min_samples_leaf: 8
  model__min_samples_split: 35
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 89
  model__max_features: 0.09235275433906613
  model__max_samples: 0.6895472060685487
  model__min_samples_leaf: 36
  model__min_samples_split: 14
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 53
  model__max_features: 0.524345214222662
  model__max_samples: 0.8966842396226606
  model__min_samples_leaf: 6
  model__min_samples_split: 41
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 35
  model__max_features: 0.7789414127771916
  model__max_samples: 0.9961175190301961
  model__min_samples_leaf: 30
  model__min_samples_split: 47
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 49
  model__max_features: 0.8627876809557973
  model__max_samples: 0.6463854797506566
  model__min_samples_leaf: 46
  model__min_samples_split: 37
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 83
  model__max_features: 0.6448305026897199
  model__max_samples: 0.6475647936637973
  model__min_samples_leaf: 44
  model__min_samples_split: 46
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 26
  model__max_features: 0.4988389641416324
  model__max_samples: 0.765384692180908
  model__min_samples_leaf: 9
  model__min_samples_split: 30
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 76
  model__max_features: 0.10885294372583514
  model__max_samples: 0.5295044640228727
  model__min_samples_leaf: 47
  model__min_samples_split: 3
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 71
  model__max_features: 0.5511166072790119
  model__max_samples: 0.7838249480056945
  model__min_samples_leaf: 5
  model__min_samples_split: 43
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 8
  model__max_features: 0.02090743448782125
  model__max_samples: 0.6954428768809571
  model__min_samples_leaf: 10
  model__min_samples_split: 47
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 0.5
  model__min_samples_leaf: 7
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 0.5
  model__min_samples_leaf: 18
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 1
  model__max_features: 0.95
  model__max_samples: 0.5
  model__min_samples_leaf: 1
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 58
  model__max_features: 0.9423809467657925
  model__max_samples: 0.9006165717444452
  model__min_samples_leaf: 18
  model__min_samples_split: 41
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 70
  model__max_features: 0.01
  model__max_samples: 0.9226328485017692
  model__min_samples_leaf: 6
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 0.7290647832525718
  model__min_samples_leaf: 1
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 93
  model__max_features: 0.01
  model__max_samples: 0.7925986037590671
  model__min_samples_leaf: 39
  model__min_samples_split: 32
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 1
  model__max_features: 0.01
  model__max_samples: 0.5
  model__min_samples_leaf: 6
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 1
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 94
  model__max_features: 0.04812598389302365
  model__max_samples: 0.8993701671108224
  model__min_samples_leaf: 12
  model__min_samples_split: 34
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 1
  model__max_features: 0.01
  model__max_samples: 0.5539855393102435
  model__min_samples_leaf: 13
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 0.5
  model__min_samples_leaf: 6
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 58
  model__max_features: 0.01
  model__max_samples: 0.6016773592187359
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 10
  model__min_samples_split: 21
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 11
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 1
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 1
  model__max_features: 0.01
  model__max_samples: 0.5676003591411541
  model__min_samples_leaf: 8
  model__min_samples_split: 11
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 69
  model__max_features: 0.01
  model__max_samples: 0.689093366601841
  model__min_samples_leaf: 15
  model__min_samples_split: 2
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 15
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 94
  model__max_features: 0.050555638494048746
  model__max_samples: 0.9981343055551386
  model__min_samples_leaf: 49
  model__min_samples_split: 44
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 59
  model__max_features: 0.3860853057681297
  model__max_samples: 0.9974199606870047
  model__min_samples_leaf: 1
  model__min_samples_split: 6
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 42
  model__max_features: 0.015164638425146221
  model__max_samples: 0.958191665836232
  model__min_samples_leaf: 27
  model__min_samples_split: 49
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 13
  model__max_features: 0.9256748729445506
  model__max_samples: 0.9900543627982158
  model__min_samples_leaf: 1
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 32
  model__max_features: 0.036037255836206136
  model__max_samples: 0.9959993532107771
  model__min_samples_leaf: 35
  model__min_samples_split: 34
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 18
  model__max_features: 0.31197173771351894
  model__max_samples: 0.9810626640737345
  model__min_samples_leaf: 1
  model__min_samples_split: 46
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 13
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.7111661607652825
  model__max_samples: 0.8870537038199915
  model__min_samples_leaf: 11
  model__min_samples_split: 4
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.6598681998442996
  model__max_samples: 0.643475565369805
  model__min_samples_leaf: 11
  model__min_samples_split: 33
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 11
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 100
  model__max_features: 0.01
  model__max_samples: 1.0
  model__min_samples_leaf: 12
  model__min_samples_split: 50
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 48
  model__max_features: 0.0367994062539427
  model__max_samples: 0.5474604880893708
  model__min_samples_leaf: 49
  model__min_samples_split: 9
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 61
  model__max_features: 0.07418196632756607
  model__max_samples: 0.9978641591088707
  model__min_samples_leaf: 50
  model__min_samples_split: 23
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 88
  model__max_features: 0.9470428382808451
  model__max_samples: 0.9984362402927611
  model__min_samples_leaf: 1
  model__min_samples_split: 3
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: entropy
  model__max_depth: 85
  model__max_features: 0.022814005854715654
  model__max_samples: 0.9867174121401621
  model__min_samples_leaf: 21
  model__min_samples_split: 18
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 55
  model__max_features: 0.013677551089819866
  model__max_samples: 0.9978022054969938
  model__min_samples_leaf: 23
  model__min_samples_split: 48
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 33
  model__max_features: 0.908749401314679
  model__max_samples: 0.999778841548284
  model__min_samples_leaf: 48
  model__min_samples_split: 6
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier(...)
  model__criterion: gini
  model__max_depth: 48
  model__max_features: 0.34978879325178314
  model__max_samples: 0.9991003575314892
  model__min_samples_leaf: 19
  model__min_samples_split: 36
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: LinearSVC()
  model__C: 0.00016916075536618875
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: LinearSVC()
  model__C: 4.023624070099052e-06
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.028012345586794787
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 2.8724341161910274e-06
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.00015775181320339915
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 3.3256354971970308e-06
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.015557058851379733
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 3.0999190724740995e-06
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.00016696035314892513
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: LinearSVC()
  model__C: 0.41525282077429876
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.023649503945511765
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02597009917723651
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 86.49609222580355
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.013559759498812685
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.2277878207485646
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 4.46286113630136e-06
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 100.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.04013531452425399
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 100.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: LinearSVC()
  model__C: 0.30172213171569023
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.005535114209132761
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.024067813198048522
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.025673969592496744
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02408852292202081
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02546082367382642
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.023463478854811846
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.022709426732822252
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.023771166892255658
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.022152279795021615
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.020519915943596027
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02440120972330825
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.024798490861504614
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02422260702778968
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02497078583277068
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.023619275779353535
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.022562694063798103
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.022787147468275492
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02314899154966583
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.024090699136930065
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.024488286565018842
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.024403256875594925
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.023453572798929123
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.023263258470451458
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02432901334071879
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.023385012288547936
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02316164075323811
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.02295105342780147
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.021518998837754506
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LinearSVC()
  model__C: 0.021230989840839983
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LinearSVC()
  model__C: 0.022732211312113674
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.7379651667270184
  model__colsample_bytree: 0.9727039226921457
  model__learning_rate: 0.18623504947187017
  model__max_depth: 2
  model__min_child_weight: 18
  model__n_estimators: 261
  model__reg_alpha: 0.09094290730951683
  model__reg_lambda: 1.706207810557758
  model__subsample: 0.8203139833155411
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.6908808939215723
  model__colsample_bytree: 0.9179588939450538
  model__learning_rate: 0.4488627218681163
  model__max_depth: 1
  model__min_child_weight: 3
  model__n_estimators: 242
  model__reg_alpha: 0.030329722102636875
  model__reg_lambda: 2.7091781555856964
  model__subsample: 0.7869088330688009
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.8005307190191707
  model__colsample_bytree: 0.7798965252706274
  model__learning_rate: 0.2609178503119241
  model__max_depth: 2
  model__min_child_weight: 21
  model__n_estimators: 1066
  model__reg_alpha: 0.0022280296054526553
  model__reg_lambda: 2.5606286263555877
  model__subsample: 0.6923574041211398
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.7010942342436819
  model__colsample_bytree: 0.5432425417982732
  model__learning_rate: 0.15287643594102046
  model__max_depth: 8
  model__min_child_weight: 15
  model__n_estimators: 1510
  model__reg_alpha: 0.8530424062822517
  model__reg_lambda: 1.1333923098784455
  model__subsample: 0.8728727190499073
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.695756710016573
  model__colsample_bytree: 0.6513906177446346
  model__learning_rate: 0.23151568938936665
  model__max_depth: 19
  model__min_child_weight: 35
  model__n_estimators: 1219
  model__reg_alpha: 0.00099012704247865
  model__reg_lambda: 1.7620902204716906
  model__subsample: 0.8970245542373194
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.8260485416502482
  model__colsample_bytree: 0.6201839583625708
  model__learning_rate: 0.4457921591105172
  model__max_depth: 1
  model__min_child_weight: 3
  model__n_estimators: 118
  model__reg_alpha: 0.010367722249365871
  model__reg_lambda: 1.0011838447370598
  model__subsample: 0.752831902043835
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.6474808268561457
  model__colsample_bytree: 0.6179431148132194
  model__learning_rate: 0.462456468425166
  model__max_depth: 20
  model__min_child_weight: 3
  model__n_estimators: 559
  model__reg_alpha: 0.04772191953234671
  model__reg_lambda: 1.341119550934357
  model__subsample: 0.8264550446801299
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.8205695629866829
  model__colsample_bytree: 0.7578511153982423
  model__learning_rate: 0.44471037372755157
  model__max_depth: 3
  model__min_child_weight: 37
  model__n_estimators: 1962
  model__reg_alpha: 0.3866525074790303
  model__reg_lambda: 3.109494334508716
  model__subsample: 0.6386326623646477
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.8235602811179822
  model__colsample_bytree: 0.8376722167822778
  model__learning_rate: 0.22402354345283226
  model__max_depth: 4
  model__min_child_weight: 3
  model__n_estimators: 106
  model__reg_alpha: 0.0004580319109458466
  model__reg_lambda: 1.894932971138975
  model__subsample: 0.9202357888090007
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.6711678123843275
  model__colsample_bytree: 0.657684685278632
  model__learning_rate: 0.15744959908451117
  model__max_depth: 4
  model__min_child_weight: 9
  model__n_estimators: 1423
  model__reg_alpha: 0.001461957802501527
  model__reg_lambda: 2.7607744715672027
  model__subsample: 0.984991163381304
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.628231040875874
  model__colsample_bytree: 0.6811428171670588
  model__learning_rate: 0.5
  model__max_depth: 4
  model__min_child_weight: 69
  model__n_estimators: 157
  model__reg_alpha: 0.0018229625587641081
  model__reg_lambda: 3.2867952766786726
  model__subsample: 0.5
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.5
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.4629234377216478
  model__subsample: 0.8184037881390428
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.5
  model__colsample_bytree: 0.5
  model__learning_rate: 0.1707763412358799
  model__max_depth: 100
  model__min_child_weight: 100
  model__n_estimators: 100
  model__reg_alpha: 1.0
  model__reg_lambda: 3.520303902399158
  model__subsample: 0.7849107763014507
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 1.0
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 100
  model__n_estimators: 2000
  model__reg_alpha: 1.0
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.9206308522646313
  model__colsample_bytree: 0.5616253634762948
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 3
  model__n_estimators: 100
  model__reg_alpha: 0.11773040274399411
  model__reg_lambda: 1.0
  model__subsample: 0.5
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.834773823463663
  model__colsample_bytree: 0.6905307546706124
  model__learning_rate: 0.3617796308310402
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.0
  model__subsample: 0.9553589288947042
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.9372532739726
  model__colsample_bytree: 0.5
  model__learning_rate: 0.1470852340106569
  model__max_depth: 1
  model__min_child_weight: 2
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.0
  model__subsample: 0.9750430036564013
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.5
  model__colsample_bytree: 1.0
  model__learning_rate: 0.0001
  model__max_depth: 100
  model__min_child_weight: 23
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.7811359421464261
  model__colsample_bytree: 0.6757126184712905
  model__learning_rate: 0.4449525679980041
  model__max_depth: 100
  model__min_child_weight: 1
  model__n_estimators: 2000
  model__reg_alpha: 0.15863943483279996
  model__reg_lambda: 1.4286818149561602
  model__subsample: 0.7454483789540891
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.9670506850496075
  model__colsample_bytree: 0.5
  model__learning_rate: 0.4655024120729946
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0012649292883342958
  model__reg_lambda: 2.4850473339087666
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.5310770788937306
  model__colsample_bytree: 0.8015918880936403
  model__learning_rate: 0.025805179683828262
  model__max_depth: 1
  model__min_child_weight: 6
  model__n_estimators: 100
  model__reg_alpha: 0.0992434791163437
  model__reg_lambda: 1.0454610869434022
  model__subsample: 0.8909367510386179
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.9049964868625475
  model__colsample_bytree: 0.5
  model__learning_rate: 0.4020077680604498
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.311870076727828
  model__reg_lambda: 4.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.8115035697596011
  model__learning_rate: 0.2046706951960987
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 2000
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.275092894114252
  model__subsample: 0.7591130978568883
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.7675936180165182
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.0
  model__subsample: 0.5689040528402038
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.5
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 2
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.7221744830033217
  model__learning_rate: 0.47849606423839997
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.005772762987651843
  model__reg_lambda: 1.8856887421530446
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.6837647698135024
  model__learning_rate: 0.008273356206542409
  model__max_depth: 1
  model__min_child_weight: 12
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 2.0846500901180955
  model__subsample: 0.5
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.7134699223621359
  model__colsample_bytree: 0.5784747230481362
  model__learning_rate: 0.3606970756883986
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.017595236868095904
  model__reg_lambda: 1.9645161639183286
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.9909341210241038
  model__colsample_bytree: 0.9772023828378219
  model__learning_rate: 0.27923150045324885
  model__max_depth: 1
  model__min_child_weight: 25
  model__n_estimators: 100
  model__reg_alpha: 1.0
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.5167385919678645
  model__colsample_bytree: 0.5
  model__learning_rate: 0.0001
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.8337633083111502
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.619354870684868
  model__colsample_bytree: 0.6091997005293946
  model__learning_rate: 0.0001
  model__max_depth: 1
  model__min_child_weight: 26
  model__n_estimators: 100
  model__reg_alpha: 0.4673286863346598
  model__reg_lambda: 4.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.9555563513757337
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 21
  model__n_estimators: 100
  model__reg_alpha: 0.027456422937096898
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.9136077969486001
  model__colsample_bytree: 0.5
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.5878963633356217
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.5
  model__colsample_bytree: 0.5
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.011218667770761331
  model__reg_lambda: 1.7244096582337973
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.6464889326965747
  model__colsample_bytree: 0.7871199579785222
  model__learning_rate: 0.0001
  model__max_depth: 1
  model__min_child_weight: 24
  model__n_estimators: 100
  model__reg_alpha: 0.00014825958227534855
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.9999884501096489
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0012907704830570164
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.863242840436839
  model__colsample_bytree: 1.0
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 8
  model__n_estimators: 100
  model__reg_alpha: 0.00013427733968325006
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.8782633887210951
  model__colsample_bytree: 0.7325783142833413
  model__learning_rate: 0.40640802961949113
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.8691957453572892
  model__learning_rate: 0.3659709701795878
  model__max_depth: 100
  model__min_child_weight: 23
  model__n_estimators: 100
  model__reg_alpha: 1.0
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.5467111269412567
  model__colsample_bytree: 1.0
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0014450952595658473
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 1.0
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.00010051275085385614
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.7378173497190456
  model__learning_rate: 0.38731466899794464
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.3679895502167145
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.8787245127928907
  model__colsample_bytree: 0.5253718346246959
  model__learning_rate: 0.3953743482869536
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.730718292567923
  model__reg_lambda: 1.4578261064482914
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.648786224012795
  model__colsample_bytree: 0.9105483481639173
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 5
  model__n_estimators: 100
  model__reg_alpha: 0.23272082201601324
  model__reg_lambda: 4.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.9124015220269415
  model__colsample_bytree: 0.6476177942804549
  model__learning_rate: 0.3938197933865835
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.33399821088819
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.6485140011115004
  model__colsample_bytree: 0.8237048132818932
  model__learning_rate: 0.5
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.10954449423667904
  model__reg_lambda: 3.777422126743251
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.5
  model__learning_rate: 0.0001
  model__max_depth: 1
  model__min_child_weight: 2
  model__n_estimators: 2000
  model__reg_alpha: 0.00016418842132486178
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.6081445164627002
  model__colsample_bytree: 0.9607991154956372
  model__learning_rate: 0.3348864967689162
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0008156995617179993
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 1.0
  model__colsample_bytree: 0.6471667170027505
  model__learning_rate: 0.3581610813791982
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__scaler__transformer: None
- model: XGBClassifier(...)
  model__colsample_bylevel: 0.827767096010616
  model__colsample_bytree: 0.6838052676967015
  model__learning_rate: 0.4998553503446881
  model__max_depth: 1
  model__min_child_weight: 1
  model__n_estimators: 100
  model__reg_alpha: 0.0001
  model__reg_lambda: 1.0
  model__subsample: 1.0
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__scaler__transformer: None
timings:
  fit time averages:
  - 0.6009207487106323
  - 0.6012944936752319
  - 0.6803442955017089
  - 0.7494036912918091
  - 0.7720640897750854
  - 0.6941067218780518
  - 0.6148478984832764
  - 0.6118456840515136
  - 0.5795612335205078
  - 0.620888090133667
  - 0.9138833045959472
  - 0.7740988731384277
  - 0.6765868186950683
  - 0.6267107486724853
  - 0.5644761800765992
  - 0.5447910547256469
  - 0.5633730411529541
  - 0.8981851816177369
  - 0.7658488750457764
  - 0.5877918004989624
  - 0.7866169929504394
  - 0.8697114229202271
  - 0.6808083295822144
  - 0.6404050588607788
  - 0.631836199760437
  - 0.9716070175170899
  - 0.5730647087097168
  - 0.5598520994186401
  - 0.6397389650344849
  - 0.672104787826538
  - 1.9706512928009032
  - 0.6403675556182862
  - 0.854298210144043
  - 0.5527540445327759
  - 0.551272988319397
  - 0.6202089548110962
  - 0.5457091093063354
  - 0.5528697967529297
  - 0.6806765556335449
  - 0.5097138404846191
  - 0.6422279596328735
  - 0.5462912321090698
  - 0.5122293710708619
  - 0.5125383615493775
  - 0.4999508857727051
  - 0.631406044960022
  - 0.6674355745315552
  - 0.6958861112594604
  - 0.5598196506500244
  - 0.5076138973236084
  - 0.03737936019897461
  - 0.010851716995239258
  - 0.0370957612991333
  - 0.023685193061828612
  - 0.04219307899475098
  - 0.03499977588653565
  - 0.011255908012390136
  - 0.044586467742919925
  - 0.044373369216918944
  - 0.02682037353515625
  - 0.09909710884094239
  - 0.015778422355651855
  - 0.016937613487243652
  - 0.057700300216674806
  - 0.042744565010070804
  - 0.015493226051330567
  - 0.024892425537109374
  - 0.02871267795562744
  - 0.026724839210510255
  - 0.021207118034362794
  - 0.09404911994934081
  - 0.036665153503417966
  - 0.02825131416320801
  - 0.11091241836547852
  - 0.02457404136657715
  - 0.0793642520904541
  - 0.112949538230896
  - 0.052727246284484865
  - 0.06373810768127441
  - 0.12354860305786133
  - 0.027918577194213867
  - 0.03297312259674072
  - 0.01897454261779785
  - 0.03282747268676758
  - 0.023584842681884766
  - 0.020132017135620118
  - 0.030010414123535157
  - 0.019238996505737304
  - 0.02179696559906006
  - 0.020360422134399415
  - 0.026816630363464357
  - 0.02027130126953125
  - 0.021826720237731932
  - 0.0257617712020874
  - 0.01833806037902832
  - 0.027130746841430665
  - 0.020112013816833495
  - 0.020580697059631347
  - 0.02261083126068115
  - 0.03694088459014892
  - 0.6424405336380005
  - 0.6677376508712769
  - 0.9361204385757447
  - 0.8362671613693238
  - 0.6743274688720703
  - 0.6468798637390136
  - 0.7849977731704711
  - 0.5613867044448853
  - 0.8913621187210083
  - 0.6460630416870117
  - 0.5990453958511353
  - 0.6731016874313355
  - 0.6490385293960571
  - 0.5899362564086914
  - 1.0830483436584473
  - 0.5554126262664795
  - 0.7406898260116577
  - 0.6418449878692627
  - 0.5207944869995117
  - 0.5284679889678955
  - 0.5400409698486328
  - 0.5757089853286743
  - 0.6191332578659058
  - 0.5024218082427978
  - 0.7201375484466552
  - 0.5397120714187622
  - 0.5222616195678711
  - 0.6953091144561767
  - 1.2512073278427125
  - 0.5217070817947388
  - 0.5095752000808715
  - 0.5029098272323609
  - 0.538191819190979
  - 1.0506387233734131
  - 0.5393870353698731
  - 1.2470436334609984
  - 0.5688318729400634
  - 1.144491982460022
  - 0.6034185886383057
  - 0.9932342290878295
  - 1.0000776290893554
  - 0.515796709060669
  - 0.5597679376602173
  - 0.485799241065979
  - 0.4999538421630859
  - 1.2997532129287719
  - 0.5034157276153565
  - 0.4814383745193481
  - 0.8449009895324707
  - 0.6821331739425659
  - 0.05419249534606933
  - 0.025623631477355958
  - 0.010443973541259765
  - 0.010569381713867187
  - 0.021777915954589843
  - 0.009386587142944335
  - 0.02347404956817627
  - 0.023218536376953126
  - 0.04841349124908447
  - 0.05937240123748779
  - 0.011369848251342773
  - 0.011329317092895507
  - 0.05825736522674561
  - 0.024071860313415527
  - 0.013892221450805663
  - 0.021868133544921876
  - 0.04249386787414551
  - 0.013908958435058594
  - 0.057006001472473145
  - 0.014565181732177735
  - 0.013103246688842773
  - 0.012175226211547851
  - 0.01240847110748291
  - 0.012283754348754884
  - 0.012282204627990723
  - 0.012403631210327148
  - 0.012527871131896972
  - 0.011689519882202149
  - 0.011612582206726074
  - 0.011161351203918457
  - 0.011455821990966796
  - 0.011284828186035156
  - 0.010732555389404297
  - 0.011929035186767578
  - 0.011721301078796386
  - 0.011403393745422364
  - 0.012192988395690918
  - 0.011183500289916992
  - 0.011528849601745605
  - 0.012501883506774902
  - 0.013482117652893066
  - 0.012016534805297852
  - 0.011485624313354491
  - 0.011238169670104981
  - 0.012466049194335938
  - 0.012134528160095215
  - 0.012287640571594238
  - 0.011799192428588868
  - 0.012223243713378906
  - 0.012141752243041991
  - 0.12967901229858397
  - 0.08179750442504882
  - 0.39813506603240967
  - 1.1887363910675048
  - 0.3673862934112549
  - 0.05716731548309326
  - 0.5544854640960694
  - 0.6255321264266968
  - 0.08603270053863525
  - 1.2778288841247558
  - 0.07123370170593261
  - 0.0519197940826416
  - 0.04054996967315674
  - 1.0884157419204712
  - 0.051475143432617186
  - 0.06738071441650391
  - 0.048766160011291505
  - 0.06775114536285401
  - 1.9485573768615723
  - 0.056143879890441895
  - 0.04971320629119873
  - 0.048592567443847656
  - 1.0452048540115357
  - 0.05285501480102539
  - 0.051412320137023924
  - 0.059425520896911624
  - 0.07437999248504638
  - 0.0539548397064209
  - 0.07969982624053955
  - 0.046865200996398924
  - 0.05516231060028076
  - 0.07945058345794678
  - 0.048757624626159665
  - 0.05361199378967285
  - 0.045259714126586914
  - 0.06616621017456055
  - 0.04974079132080078
  - 0.055498266220092775
  - 0.09869837760925293
  - 0.06750421524047852
  - 0.0992617130279541
  - 0.07385947704315185
  - 0.1459428548812866
  - 0.07957382202148437
  - 0.07538557052612305
  - 0.08000893592834472
  - 0.5011270046234131
  - 0.05929124355316162
  - 0.0665733814239502
  - 0.05800089836120605
  fit time standard deviations:
  - 0.08499248957511685
  - 0.10539174263649835
  - 0.1035583311430696
  - 0.10671804563201086
  - 0.17278115248121176
  - 0.14768585749488367
  - 0.11410825162399814
  - 0.09856673036083533
  - 0.08666491666142294
  - 0.0943503583765813
  - 0.14535328893651556
  - 0.1456424780183335
  - 0.11064939852897294
  - 0.123847362056135
  - 0.09796342159576026
  - 0.09254794227960303
  - 0.0908891344722756
  - 0.13177123482499614
  - 0.11192599232815116
  - 0.09731584884044896
  - 0.1405891408869725
  - 0.222774377941558
  - 0.13709814027963851
  - 0.10567612581805522
  - 0.09965377388742766
  - 0.13409843252313106
  - 0.0994813231164549
  - 0.09620005496113107
  - 0.13770736438219394
  - 0.06869059672553322
  - 0.7728629651716816
  - 0.08809951350388878
  - 0.2282180261125285
  - 0.08359897384803286
  - 0.10041898623330343
  - 0.1301778631081266
  - 0.09906843451490742
  - 0.10014481302838274
  - 0.12465606630680082
  - 0.0731422656316984
  - 0.0967499622351717
  - 0.07418013515754858
  - 0.0763893196732398
  - 0.08393523713469325
  - 0.0734708247911506
  - 0.13459980295346152
  - 0.10510032893069737
  - 0.15248118607303088
  - 0.09556145684195055
  - 0.07764329250319392
  - 0.005427797988737665
  - 0.000170041033207011
  - 0.004903082678850903
  - 0.0051996202417548334
  - 0.009734691469262305
  - 0.010145276312763003
  - 0.0015440120861745354
  - 0.006632128475345653
  - 0.006054328112418951
  - 0.0067367313400174215
  - 0.041959664104378555
  - 0.0036943370399662888
  - 0.006447517781610573
  - 0.025321313588957093
  - 0.015625925237964
  - 0.004739738931845112
  - 0.010696645920881572
  - 0.006974498516392303
  - 0.007903774802299993
  - 0.006996343580849312
  - 0.02171959465661163
  - 0.01728118086916968
  - 0.011118317496729103
  - 0.03512638405231606
  - 0.008321321960712736
  - 0.03296277115095081
  - 0.048538950439848835
  - 0.0107595048716371
  - 0.021801562797008768
  - 0.052716122575838215
  - 0.01546509889888773
  - 0.010961346691004748
  - 0.005319833780069095
  - 0.010178086394753962
  - 0.008793429991635711
  - 0.006035939258022037
  - 0.008399485362716319
  - 0.005518343489264803
  - 0.006779564485465227
  - 0.004470745672753125
  - 0.009506008442355272
  - 0.006419704955153048
  - 0.00837468823440777
  - 0.00647740856638518
  - 0.005408163527522873
  - 0.01084266942258854
  - 0.005684073475153306
  - 0.0061282705256184115
  - 0.009677329397328854
  - 0.018386076964137122
  - 0.06229623546540984
  - 0.12564466300987984
  - 0.18363596583383227
  - 0.10543070351804897
  - 0.10833187921722791
  - 0.11498501439966527
  - 0.14928216626671698
  - 0.11166709553576387
  - 0.13122304065444088
  - 0.09476402682287
  - 0.05568450168598878
  - 0.15137537304435136
  - 0.04850380123739324
  - 0.08221560219379383
  - 0.1775612761142734
  - 0.09312977825253602
  - 0.1562495317450071
  - 0.12848515818689543
  - 0.09902828219077285
  - 0.08645845277526874
  - 0.08401348554408883
  - 0.10855811773741463
  - 0.14391146567476154
  - 0.07896150785147373
  - 0.1993332398160602
  - 0.08580735221348758
  - 0.08035405915231895
  - 0.1506583306581106
  - 0.3894646748253327
  - 0.09129862305240269
  - 0.08097941124411649
  - 0.08304168163534792
  - 0.07467124385442495
  - 0.16842056951341886
  - 0.09761979349131862
  - 0.2103824244221228
  - 0.023904535009724413
  - 0.2552214071349177
  - 0.10607775949085149
  - 0.1538949255085026
  - 0.19238605535353948
  - 0.0782103564869775
  - 0.10424942181722453
  - 0.08090358636392352
  - 0.07844700731516968
  - 0.18969752677951995
  - 0.08215766116348153
  - 0.06624325241322533
  - 0.13160041924780794
  - 0.09742982576824707
  - 0.005616782859622616
  - 0.006822433062088125
  - 0.0013784275495365315
  - 0.001537237688565691
  - 0.005135483570812162
  - 0.0008972654055282335
  - 0.00435605575574453
  - 0.004805070463093303
  - 0.0058363843280954215
  - 0.0066799501773304485
  - 0.002437966462303913
  - 0.0018068386598916958
  - 0.006014936762007513
  - 0.006141264979275991
  - 0.0028211199604263183
  - 0.004269090385188273
  - 0.005996130184881747
  - 0.004026494184894132
  - 0.004202599604777629
  - 0.0034933219292912748
  - 0.0037415962411750134
  - 0.002295104819092533
  - 0.0023780802499648447
  - 0.0024057424480500556
  - 0.002784326529261133
  - 0.002905739281356966
  - 0.0029179884178396395
  - 0.002445122184280156
  - 0.0023064990930983893
  - 0.0022966453873990733
  - 0.0023787014009096536
  - 0.002320339051541894
  - 0.0017791667451346768
  - 0.0025965174483585703
  - 0.0023029099094154727
  - 0.0024370696928367693
  - 0.002320457171130656
  - 0.0021532438172678307
  - 0.002560469074984222
  - 0.003057871264539978
  - 0.0038502402028041086
  - 0.002297798260924547
  - 0.0020941994972392647
  - 0.0018808197068039979
  - 0.0025966026823983335
  - 0.0024611707076864853
  - 0.002481290283199703
  - 0.0021369670131414138
  - 0.002193722101739601
  - 0.0023273728621577092
  - 0.02331043582155311
  - 0.0095721114150959
  - 0.06168317432407111
  - 0.17390719566071614
  - 0.04209409422517879
  - 0.005672808547111496
  - 0.07245734196452887
  - 0.0785746823926848
  - 0.005550497847037981
  - 0.17082841843873792
  - 0.009971683529075091
  - 0.008161301652831679
  - 0.00791205154582504
  - 0.15564968914295388
  - 0.00856711320007496
  - 0.00741188805877005
  - 0.0077095310704693555
  - 0.005747950898205612
  - 0.23256286509304908
  - 0.016482254100918442
  - 0.006849261048561125
  - 0.009673494424700215
  - 0.14426967821567485
  - 0.0031917740067386913
  - 0.009129913984246145
  - 0.008668910824320622
  - 0.007761512092219494
  - 0.014772330818588105
  - 0.011513900806131266
  - 0.008773637552638108
  - 0.016721878333496136
  - 0.013610982743987202
  - 0.0104620169089201
  - 0.016436447035003285
  - 0.00550194111733485
  - 0.008518153596810445
  - 0.006420837640793204
  - 0.012337955383385647
  - 0.016494742519014123
  - 0.015030276218201794
  - 0.029451707373721384
  - 0.02692022127649087
  - 0.039574256803311544
  - 0.02698712355732965
  - 0.017008581666305336
  - 0.012576739915310794
  - 0.08748919152464285
  - 0.01956527766970839
  - 0.011186580713329914
  - 0.010761492859420714
  score time averages:
  - 0.05950028896331787
  - 0.0549027681350708
  - 0.04336118698120117
  - 0.04503092765808105
  - 0.066568922996521
  - 0.04266669750213623
  - 0.04558250904083252
  - 0.04735817909240723
  - 0.054901504516601564
  - 0.04482088088989258
  - 0.05176644325256348
  - 0.0563948392868042
  - 0.06168668270111084
  - 0.06098852157592773
  - 0.04058928489685058
  - 0.052159881591796874
  - 0.060991859436035155
  - 0.05932636260986328
  - 0.05276825428009033
  - 0.0573979377746582
  - 0.05123543739318848
  - 0.08810529708862305
  - 0.04956331253051758
  - 0.07845721244812012
  - 0.05117301940917969
  - 0.05547099113464356
  - 0.054544258117675784
  - 0.06554570198059081
  - 0.06563644409179688
  - 0.0727982759475708
  - 0.07450723648071289
  - 0.06939690113067627
  - 0.07445282936096191
  - 0.059051918983459475
  - 0.055315375328063965
  - 0.07277135848999024
  - 0.0412564754486084
  - 0.05600948333740234
  - 0.0602816104888916
  - 0.06274201869964599
  - 0.06691832542419433
  - 0.05991616249084473
  - 0.05689992904663086
  - 0.055150818824768064
  - 0.053432130813598634
  - 0.05028367042541504
  - 0.0504683256149292
  - 0.06317920684814453
  - 0.058229899406433104
  - 0.056124210357666016
  - 0.01616489887237549
  - 0.00404062271118164
  - 0.0108475923538208
  - 0.012064623832702636
  - 0.011217021942138672
  - 0.0064236164093017575
  - 0.0038093805313110353
  - 0.01080467700958252
  - 0.013009262084960938
  - 0.012726211547851562
  - 0.007219624519348144
  - 0.006356620788574218
  - 0.008301973342895508
  - 0.008279895782470703
  - 0.010055947303771972
  - 0.007060813903808594
  - 0.004666948318481445
  - 0.010570335388183593
  - 0.006506276130676269
  - 0.005390191078186035
  - 0.01612379550933838
  - 0.01571075916290283
  - 0.010867929458618164
  - 0.005860328674316406
  - 0.006120610237121582
  - 0.006249046325683594
  - 0.02409520149230957
  - 0.01816680431365967
  - 0.032600021362304686
  - 0.007936215400695801
  - 0.01067972183227539
  - 0.01139814853668213
  - 0.006917619705200195
  - 0.011105513572692871
  - 0.005509757995605468
  - 0.00643467903137207
  - 0.012531161308288574
  - 0.0055379152297973635
  - 0.005789422988891601
  - 0.006322598457336426
  - 0.010263156890869141
  - 0.00497133731842041
  - 0.008663296699523926
  - 0.008693051338195801
  - 0.004590320587158203
  - 0.005204534530639649
  - 0.005174064636230468
  - 0.005139613151550293
  - 0.008597588539123536
  - 0.0077065229415893555
  - 0.056749510765075686
  - 0.052804183959960935
  - 0.04858851432800293
  - 0.04371321201324463
  - 0.05449292659759521
  - 0.056294608116149905
  - 0.06526417732238769
  - 0.04839613437652588
  - 0.0929617166519165
  - 0.06259195804595948
  - 0.055502581596374514
  - 0.06091768741607666
  - 0.06659393310546875
  - 0.06460163593292237
  - 0.05128350257873535
  - 0.05431671142578125
  - 0.06718933582305908
  - 0.050244498252868655
  - 0.05591506958007812
  - 0.041148829460144046
  - 0.054410696029663086
  - 0.049891424179077146
  - 0.05075705051422119
  - 0.04453520774841309
  - 0.09698183536529541
  - 0.05927886962890625
  - 0.052508759498596194
  - 0.07038402557373047
  - 0.09244990348815918
  - 0.04500195980072021
  - 0.04490716457366943
  - 0.05173535346984863
  - 0.05238265991210937
  - 0.050670194625854495
  - 0.0499093770980835
  - 0.05007486343383789
  - 0.10921773910522461
  - 0.08379180431365967
  - 0.06415355205535889
  - 0.0466972827911377
  - 0.0885359525680542
  - 0.05127737522125244
  - 0.04741325378417969
  - 0.04640884399414062
  - 0.05246460437774658
  - 0.054715752601623535
  - 0.04073686599731445
  - 0.04027845859527588
  - 0.053194308280944826
  - 0.04558286666870117
  - 0.005435323715209961
  - 0.012734055519104004
  - 0.004506254196166992
  - 0.004271817207336426
  - 0.011713600158691407
  - 0.0038831472396850587
  - 0.011838531494140625
  - 0.012017297744750976
  - 0.005248069763183594
  - 0.014571428298950195
  - 0.005811548233032227
  - 0.00538339614868164
  - 0.014683938026428223
  - 0.013249683380126952
  - 0.005883550643920899
  - 0.01234126091003418
  - 0.007485795021057129
  - 0.005601334571838379
  - 0.013898134231567383
  - 0.006214714050292969
  - 0.00689549446105957
  - 0.005710434913635254
  - 0.009219217300415038
  - 0.007637906074523926
  - 0.007396984100341797
  - 0.006754231452941894
  - 0.005649781227111817
  - 0.006808948516845703
  - 0.005633044242858887
  - 0.00644979476928711
  - 0.006451535224914551
  - 0.006760311126708984
  - 0.006722307205200196
  - 0.004620790481567383
  - 0.007848238945007325
  - 0.006029772758483887
  - 0.007097911834716797
  - 0.006593871116638184
  - 0.0054045915603637695
  - 0.004853272438049316
  - 0.005679202079772949
  - 0.007925844192504883
  - 0.0057790279388427734
  - 0.005077481269836426
  - 0.007312488555908203
  - 0.006618499755859375
  - 0.007292604446411133
  - 0.00767514705657959
  - 0.006225967407226562
  - 0.005652093887329101
  - 0.020602822303771973
  - 0.013489389419555664
  - 0.017784714698791504
  - 0.014848589897155762
  - 0.019561076164245607
  - 0.00599522590637207
  - 0.011555218696594238
  - 0.017279338836669923
  - 0.01248469352722168
  - 0.015867280960083007
  - 0.020749950408935548
  - 0.008648014068603516
  - 0.01410057544708252
  - 0.01177823543548584
  - 0.006404256820678711
  - 0.008874654769897461
  - 0.008600306510925294
  - 0.016948437690734862
  - 0.014655590057373047
  - 0.011593174934387208
  - 0.008536934852600098
  - 0.007522368431091308
  - 0.012009572982788087
  - 0.016828489303588868
  - 0.008216524124145507
  - 0.01094660758972168
  - 0.009637045860290527
  - 0.01032106876373291
  - 0.007593488693237305
  - 0.008581280708312988
  - 0.013773131370544433
  - 0.011104249954223632
  - 0.008063316345214844
  - 0.02007615566253662
  - 0.0212294340133667
  - 0.0077211856842041016
  - 0.016699910163879395
  - 0.008003950119018555
  - 0.018445682525634766
  - 0.007587814331054687
  - 0.016168928146362303
  - 0.014886879920959472
  - 0.020475172996520997
  - 0.011416101455688476
  - 0.00982968807220459
  - 0.014124298095703125
  - 0.020557427406311037
  - 0.02344198226928711
  - 0.012414216995239258
  - 0.009509396553039551
  score time standard deviations:
  - 0.014098654353534775
  - 0.011287993296067524
  - 0.009272443604810523
  - 0.008312551709936224
  - 0.020380433966019757
  - 0.012426772858496532
  - 0.01221724129187259
  - 0.010679315649222308
  - 0.0098362004131633
  - 0.0078134765057793
  - 0.014033037024243104
  - 0.020929286351383705
  - 0.013542207916839183
  - 0.01914771320257117
  - 0.008220896747425478
  - 0.01185027516840381
  - 0.014990440001499204
  - 0.017796369825370313
  - 0.008757622019838476
  - 0.015284945378258282
  - 0.013172498170736808
  - 0.029738640992063005
  - 0.014959455327544058
  - 0.025119119849702186
  - 0.008540919852177826
  - 0.013606332368475697
  - 0.012230540794278802
  - 0.019377953239430572
  - 0.019381413826957777
  - 0.009740203644679687
  - 0.02321243132639827
  - 0.02055145460450757
  - 0.027236311995072607
  - 0.01885304040794763
  - 0.011377696083035578
  - 0.021960670245126667
  - 0.009318221813040154
  - 0.013181962467250856
  - 0.010831428542283953
  - 0.019038783787507948
  - 0.01685492861930512
  - 0.015053729690464347
  - 0.012911694517411351
  - 0.011083154894153858
  - 0.012383967311946405
  - 0.010833896780960764
  - 0.013968041808910413
  - 0.01625096199585354
  - 0.01501204458416292
  - 0.0122161191033143
  - 0.0049652393561270955
  - 0.0001812130896759359
  - 0.0027361083658643936
  - 0.0035068026101110024
  - 0.002999293404631183
  - 0.0033766762648099794
  - 0.00014456358914159296
  - 0.002949972836798945
  - 0.0036779995076192
  - 0.004510487704519651
  - 0.0028407342284913215
  - 0.001820829221954966
  - 0.004243844718071643
  - 0.003012297805257413
  - 0.004890497144807393
  - 0.004399254929887987
  - 0.0009061432082494258
  - 0.004394924432662589
  - 0.0027383083016499347
  - 0.002147334912802502
  - 0.00666831517487431
  - 0.005221698041815326
  - 0.0054795515495817595
  - 0.001759416320074943
  - 0.002883828654987073
  - 0.0025405101336280923
  - 0.03138555039133435
  - 0.006394649741673616
  - 0.008562730273599876
  - 0.00453726073575778
  - 0.005133928779692686
  - 0.004496481054893024
  - 0.0032872662289501584
  - 0.0052334508180213925
  - 0.0018516413446464982
  - 0.0026469316832021237
  - 0.006467490030226533
  - 0.0020917787813417702
  - 0.0007561981363939356
  - 0.002363331660514963
  - 0.0036423159366614096
  - 0.0007970533149512555
  - 0.004149618110395941
  - 0.004847099077198058
  - 0.00035449101571980183
  - 0.001519102570212582
  - 0.0012703165642669427
  - 0.001080531131353639
  - 0.0037800073837195576
  - 0.00347107310258912
  - 0.011631646082162128
  - 0.012296849982060659
  - 0.013914706708430324
  - 0.007028361584037776
  - 0.011494154459037806
  - 0.01725267431504547
  - 0.01626436928700444
  - 0.00886123599342761
  - 0.03795394029625532
  - 0.011839472614462727
  - 0.011377409459537854
  - 0.01489054877723395
  - 0.017742260524461054
  - 0.019580490107594783
  - 0.014675868346387193
  - 0.015432685799767297
  - 0.01746050765825072
  - 0.01305365653757053
  - 0.014159594847980132
  - 0.009056645702727571
  - 0.01628736030662169
  - 0.013673815609547217
  - 0.018783108121859713
  - 0.00874919347468605
  - 0.041759566454245764
  - 0.013880752110536843
  - 0.010135362723108924
  - 0.0241776831120034
  - 0.0321622220477744
  - 0.008298821838204254
  - 0.011409838576603533
  - 0.019562739925280768
  - 0.018624488997201052
  - 0.01141006902840387
  - 0.012798754480050096
  - 0.012916879794263968
  - 0.03959318203545441
  - 0.03415735276725182
  - 0.020609529518907422
  - 0.00915134528399044
  - 0.03211851439654159
  - 0.013637208173160371
  - 0.015282048837776696
  - 0.01264108161499365
  - 0.010870680248064387
  - 0.009822425763442782
  - 0.008543930238182115
  - 0.007324034970159888
  - 0.015426227368488405
  - 0.008909907611189182
  - 0.002491396588391259
  - 0.005353228587280702
  - 0.00088162827087212
  - 0.0009135621372714429
  - 0.003435275953868452
  - 0.00019922435225793684
  - 0.003323488554981455
  - 0.003257776712617371
  - 0.0022120957560513095
  - 0.006487374954999452
  - 0.003021194731304656
  - 0.0024971037538545128
  - 0.00423719090306182
  - 0.00419493387104122
  - 0.002916453709515206
  - 0.003900535782850472
  - 0.0035107744759716422
  - 0.0023108059908351305
  - 0.004066348796832788
  - 0.002788079303180679
  - 0.0036255655221892093
  - 0.0023979712748364358
  - 0.004984609947175545
  - 0.0036049781390437457
  - 0.0037383156697425144
  - 0.0036023106924327974
  - 0.0022073431521063384
  - 0.003486568095037805
  - 0.0022705373864307173
  - 0.003076126174070472
  - 0.0030018991439264963
  - 0.0031119008709207287
  - 0.0033242937160507086
  - 0.00044737426587140655
  - 0.004388272898488269
  - 0.002703142763035737
  - 0.0035826555362352746
  - 0.003329899781513781
  - 0.0023174268749264083
  - 0.0009505420353955015
  - 0.0022672896746366465
  - 0.0037735297006284353
  - 0.0022849190000538574
  - 0.0019612814109705033
  - 0.0036708472791713294
  - 0.0042128799793482085
  - 0.003189224472698216
  - 0.004518100151024703
  - 0.0022227266347602504
  - 0.0022164771471807386
  - 0.006274928297323718
  - 0.00456006265015972
  - 0.007606948595323152
  - 0.005501611640696797
  - 0.007860675065945864
  - 0.0029424124103815947
  - 0.00346928379195597
  - 0.0047601925116309025
  - 0.0023569259874975687
  - 0.0029528087289427876
  - 0.009993177858725945
  - 0.0031315021090243212
  - 0.0035504098723526324
  - 0.005689290008662279
  - 0.0022334661320511234
  - 0.0031107175385180507
  - 0.00344295872169929
  - 0.003946893267812515
  - 0.0031541194573273482
  - 0.003970343942069839
  - 0.003332059237542599
  - 0.002383849562420955
  - 0.006479462498973783
  - 0.004385802929265302
  - 0.0029961825823884205
  - 0.0031932647663340196
  - 0.003209049052820367
  - 0.0056221949820715105
  - 0.0021438040844866213
  - 0.0030034820473718742
  - 0.005651251425757301
  - 0.0055194515840719365
  - 0.002665231062967424
  - 0.0053381335484546195
  - 0.008285611523745658
  - 0.0034117788888504094
  - 0.004565636463883025
  - 0.0022105577016977864
  - 0.003271119512510266
  - 0.002620658107257651
  - 0.007927869598303843
  - 0.008160450625640867
  - 0.00858216604309407
  - 0.004801865244379911
  - 0.0030866326120201925
  - 0.007557129789331975
  - 0.008203999501074883
  - 0.009608762376873855
  - 0.006131834609826328
  - 0.006399486872675832
