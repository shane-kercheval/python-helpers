['{
model: ExtraTreesClassifier(), imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.49180611808491104, max_depth: 49, min_samples_split: 32, min_samples_leaf: 36, max_samples: 0.6816015479755677, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.29997689949170153, max_depth: 96, min_samples_split: 21, min_samples_leaf: 20, max_samples: 0.7455551022408218, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.36238465000657355, max_depth: 85, min_samples_split: 5, min_samples_leaf: 10, max_samples: 0.8987194012367643, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.4734820214585714, max_depth: 25, min_samples_split: 48, min_samples_leaf: 6, max_samples: 0.6308684032130806, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.7003133830237206, max_depth: 38, min_samples_split: 18, min_samples_leaf: 1, max_samples: 0.5144422625256673, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.856962325271055, max_depth: 30, min_samples_split: 17, min_samples_leaf: 28, max_samples: 0.5625745905758682, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.7812332723251562, max_depth: 50, min_samples_split: 35, min_samples_leaf: 47, max_samples: 0.8455558039385863, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.6720263104468132, max_depth: 81, min_samples_split: 34, min_samples_leaf: 34, max_samples: 0.9708723155369877, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.030094647757153765, max_depth: 84, min_samples_split: 24, min_samples_leaf: 36, max_samples: 0.9812939388768892, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.5590482974652552, max_depth: 72, min_samples_split: 35, min_samples_leaf: 32, max_samples: 0.6304453528545368, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 2, min_samples_leaf: 1, max_samples: 1.0, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.95, max_depth: 24, min_samples_split: 50, min_samples_leaf: 1, max_samples: 1.0, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.95, max_depth: 43, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.8727729817417405, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.18574002609298654, max_depth: 74, min_samples_split: 14, min_samples_leaf: 1, max_samples: 0.8131245280913415, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.6247691288041897, max_depth: 43, min_samples_split: 50, min_samples_leaf: 1, max_samples: 1.0, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 1, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 42, min_samples_leaf: 50, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: ExtraTreesClassifier(), max_features: 0.33121166727662854, max_depth: 100, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.013287059989004714, max_depth: 11, min_samples_split: 44, min_samples_leaf: 11, max_samples: 0.847417926335009, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 4, min_samples_leaf: 9, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}',
'{
model: ExtraTreesClassifier(), max_features: 0.8970822889768214, max_depth: 32, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 2, min_samples_leaf: 31, max_samples: 1.0, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.95, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.95, max_depth: 1, min_samples_split: 2, min_samples_leaf: 9, max_samples: 0.9339647826685389, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 40, min_samples_split: 50, min_samples_leaf: 12, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 64, min_samples_split: 21, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 97, min_samples_split: 35, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.95, max_depth: 94, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.014043088501654779, max_depth: 46, min_samples_split: 6, min_samples_leaf: 3, max_samples: 0.9815667473937162, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 1, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 1, min_samples_split: 38, min_samples_leaf: 50, max_samples: 1.0, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 1, min_samples_split: 23, min_samples_leaf: 1, max_samples: 1.0, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 50, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.9293466820567537, max_depth: 99, min_samples_split: 45, min_samples_leaf: 50, max_samples: 0.5010087156020766, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 35, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.026013276672636608, max_depth: 98, min_samples_split: 46, min_samples_leaf: 1, max_samples: 0.9889788849586736, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.017859074855284974, max_depth: 82, min_samples_split: 4, min_samples_leaf: 20, max_samples: 0.5780318267616571, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.011344828275492498, max_depth: 15, min_samples_split: 14, min_samples_leaf: 2, max_samples: 0.5789753052453891, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.9418871660261328, max_depth: 3, min_samples_split: 41, min_samples_leaf: 2, max_samples: 0.7596687359962351, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.6381434070697748, max_depth: 97, min_samples_split: 39, min_samples_leaf: 3, max_samples: 0.5176511854390519, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: ExtraTreesClassifier(), max_features: 0.02212905920520495, max_depth: 18, min_samples_split: 46, min_samples_leaf: 2, max_samples: 0.829447943653709, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.015601965739779887, max_depth: 94, min_samples_split: 50, min_samples_leaf: 8, max_samples: 0.8392782464045371, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.15814665520912777, max_depth: 5, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5225368933158698, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 1.0, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 1.0, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: ExtraTreesClassifier(), max_features: 0.09561107818600736, max_depth: 4, min_samples_split: 33, min_samples_leaf: 1, max_samples: 0.9961665643560078, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 2.3637275726622057e-06, imputer: SimpleImputer(strategy='median'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 7.097411092472356, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LogisticRegression(), C: 8.497573077546403e-06, imputer: SimpleImputer(strategy='median'), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}",
'{
model: LogisticRegression(), C: 0.019198473016173074, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}', "{
model: LogisticRegression(), C: 80.08489830558847, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.03029122234160651, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 9.46116457989142, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}',
'{
model: LogisticRegression(), C: 35.370981915459254, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}', "{
model: LogisticRegression(), C: 0.00019839591935906576, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LogisticRegression(), C: 6.109926202212488e-05, imputer: SimpleImputer(strategy='median'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.38385463534189274, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 0.00018320446728216852, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 1e-06, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 1.1322260526329455, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 0.019297120829140885, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 0.014397976219624705, imputer: SimpleImputer(strategy='median'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.0019667393387354207, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 100.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 100.0, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 0.05962230991021745, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.05542925877248923, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 1.0000209249504456e-06, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}', "{
model: LogisticRegression(), C: 0.04426400084611972, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 6.447789801438356, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.04443946276533772, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.060169750112152934, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LogisticRegression(), C: 0.04469183578567019, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.04451610229328283, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.04533376581953548, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 99.38602907502292, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LogisticRegression(), C: 0.005899527378013826, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.057534879099406834, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 0.06931501975554819, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.05610542354519348, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 0.05447830567213674, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.05342135102183043, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.054455837400146104, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.05597970340056406, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.055475958939643764, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 0.05611104727494758, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 0.05789757218307603, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 0.0864270330546957, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 9.810911483948752, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.0003942038343709884, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.09161215437755531, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LogisticRegression(), C: 99.46638143316103, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LogisticRegression(), C: 0.37511900808935533, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LogisticRegression(), C: 0.0568605262830987, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 1.0006941932940702e-06, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}',
'{
model: LogisticRegression(), C: 1.109831603470211, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}',
'{
model: RandomForestClassifier(), imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.524345214222662, max_depth: 53, min_samples_split: 41, min_samples_leaf: 6, max_samples: 0.8966842396226606, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.7789414127771916, max_depth: 35, min_samples_split: 47, min_samples_leaf: 30, max_samples: 0.9961175190301961, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.8627876809557973, max_depth: 49, min_samples_split: 37, min_samples_leaf: 46, max_samples: 0.6463854797506566, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.6448305026897199, max_depth: 83, min_samples_split: 46, min_samples_leaf: 44, max_samples: 0.6475647936637973, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.4988389641416324, max_depth: 26, min_samples_split: 30, min_samples_leaf: 9, max_samples: 0.765384692180908, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: RandomForestClassifier(), max_features: 0.10885294372583514, max_depth: 76, min_samples_split: 3, min_samples_leaf: 47, max_samples: 0.5295044640228727, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.5511166072790119, max_depth: 71, min_samples_split: 43, min_samples_leaf: 5, max_samples: 0.7838249480056945, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.02090743448782125, max_depth: 8, min_samples_split: 47, min_samples_leaf: 10, max_samples: 0.6954428768809571, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.4428629766357152, max_depth: 52, min_samples_split: 48, min_samples_leaf: 36, max_samples: 0.8483101433518945, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.7624359173890012, max_depth: 24, min_samples_split: 31, min_samples_leaf: 36, max_samples: 0.6082852779612609, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.95, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5692609299089362, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 2, min_samples_leaf: 1, max_samples: 1.0, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 1, min_samples_split: 50, min_samples_leaf: 50, max_samples: 0.8555501190560248, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.9393834388284167, max_depth: 49, min_samples_split: 3, min_samples_leaf: 2, max_samples: 0.7094749449339106, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.7846727737253352, max_depth: 4, min_samples_split: 7, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 28, min_samples_split: 50, min_samples_leaf: 18, max_samples: 0.5665179526118492, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 1.0, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 1, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.6964340748280747, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.95, max_depth: 98, min_samples_split: 2, min_samples_leaf: 50, max_samples: 0.5020845181730657, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.016459524750693476, max_depth: 22, min_samples_split: 3, min_samples_leaf: 28, max_samples: 0.8461017015814238, criterion: gini, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.015593615570062485, max_depth: 29, min_samples_split: 4, min_samples_leaf: 16, max_samples: 0.9983013718393603, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.6853845721139037, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 29, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.9284515633603371, max_depth: 56, min_samples_split: 3, min_samples_leaf: 16, max_samples: 0.6152273404853954, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 1, min_samples_split: 50, min_samples_leaf: 1, max_samples: 1.0, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.1532776365854847, max_depth: 67, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 14, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.56704588560365, max_depth: 100, min_samples_split: 2, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 59, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.0752731949518932, max_depth: 100, min_samples_split: 42, min_samples_leaf: 19, max_samples: 0.9934081618876365, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 2, min_samples_leaf: 23, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.05391411806350266, max_depth: 100, min_samples_split: 49, min_samples_leaf: 49, max_samples: 0.6203249291194352, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.262211818329651, max_depth: 98, min_samples_split: 44, min_samples_leaf: 12, max_samples: 0.5409884804575659, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.9372414426523735, max_depth: 53, min_samples_split: 18, min_samples_leaf: 1, max_samples: 0.9808227901624585, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 52, min_samples_split: 8, min_samples_leaf: 50, max_samples: 1.0, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 100, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 70, min_samples_split: 36, min_samples_leaf: 1, max_samples: 0.5, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 39, min_samples_split: 33, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.01, max_depth: 23, min_samples_split: 50, min_samples_leaf: 1, max_samples: 0.5, criterion: entropy, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.10009932401163649, max_depth: 100, min_samples_split: 31, min_samples_leaf: 1, max_samples: 0.6699923392099892, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.3210609154123267, max_depth: 4, min_samples_split: 6, min_samples_leaf: 1, max_samples: 0.9497564662785036, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.0261327027953075, max_depth: 1, min_samples_split: 16, min_samples_leaf: 24, max_samples: 0.5254744930636215, criterion: entropy, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: RandomForestClassifier(), max_features: 0.012153954954275776, max_depth: 73, min_samples_split: 38, min_samples_leaf: 31, max_samples: 0.9984994297532177, criterion: gini, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: RandomForestClassifier(), max_features: 0.34595255136194397, max_depth: 94, min_samples_split: 2, min_samples_leaf: 30, max_samples: 0.9654046713149688, criterion: entropy, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: RandomForestClassifier(), max_features: 0.8837909423729298, max_depth: 16, min_samples_split: 50, min_samples_leaf: 2, max_samples: 0.6897060810857436, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: RandomForestClassifier(), max_features: 0.9186006798617599, max_depth: 85, min_samples_split: 47, min_samples_leaf: 3, max_samples: 0.9946392899025707, criterion: gini, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: LinearSVC(), imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 4.023624070099052e-06, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LinearSVC(), C: 0.028012345586794787, imputer: SimpleImputer(strategy='median'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 2.8724341161910274e-06, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 0.00015775181320339915, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LinearSVC(), C: 3.3256354971970308e-06, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 0.015557058851379733, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LinearSVC(), C: 3.0999190724740995e-06, imputer: SimpleImputer(strategy='median'), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LinearSVC(), C: 0.00016696035314892513, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 0.41525282077429876, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LinearSVC(), C: 3.8145672497749736e-05, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 0.009599253638474527, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 0.026747946413006315, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LinearSVC(), C: 6.918129520109431, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 88.2271135135671, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 0.1782179219689405, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 0.12803227673567422, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LinearSVC(), C: 100.0, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}', "{
model: LinearSVC(), C: 0.034685305083170186, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 3.5589158372379366e-05, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}',
'{
model: LinearSVC(), C: 100.0, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 0.06318275208100582, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 1.4311589741992943, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 1.7148640284827699, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 4.986878708049422, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 0.01716031258205489, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LinearSVC(), C: 0.0024841154868798926, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 0.003172799070108475, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 1.0967723681421644, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 0.0005891489944346768, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 0.008579732001333846, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 0.010415808650741456, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 0.005346847797986487, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 0.006209469792564176, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 0.0011185574229422661, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}",
'{
model: LinearSVC(), C: 0.10159886784556517, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 0.005568636346515556, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 1.0014961405968034e-06, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 0.004955873760554001, imputer: SimpleImputer(strategy='median'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 0.0008729329663816999, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}',
'{
model: LinearSVC(), C: 0.00326002158490251, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}',
'{
model: LinearSVC(), C: 6.997882306827813, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 1.0053886903767406e-06, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}",
'{
model: LinearSVC(), C: 0.5709002533054882, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: CustomOrdinalEncoder()
}',
'{
model: LinearSVC(), C: 0.01526060478683473, imputer: SimpleImputer(), scaler: StandardScaler(), encoder: OneHotEncoder()
}', "{
model: LinearSVC(), C: 6.423780149029393, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}", "{
model: LinearSVC(), C: 0.003295064019464745, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 1.8579028869401981, imputer: SimpleImputer(strategy='most_frequent'), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}", "{
model: LinearSVC(), C: 0.004209441366829126, imputer: SimpleImputer(strategy='most_frequent'), scaler: StandardScaler(), encoder: OneHotEncoder()
}",
'{
model: LinearSVC(), C: 0.14057804693127185, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: CustomOrdinalEncoder()
}',
'{
model: LinearSVC(), C: 0.0013800192804602552, imputer: SimpleImputer(), scaler: MinMaxScaler(), encoder: OneHotEncoder()
}',
'{
model: XGBClassifier(), imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: XGBClassifier(), max_depth: 19, learning_rate: 0.08873289670507682, n_estimators: 429, min_child_weight: 10, subsample: 0.7362631225301774, colsample_bytree: 0.8779427375763669, colsample_bylevel: 0.5502593252639497, reg_alpha: 0.0018745406666254548, reg_lambda: 1.1313155361659026, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: XGBClassifier(), max_depth: 21, learning_rate: 0.23523688900307663, n_estimators: 135, min_child_weight: 2, subsample: 0.6892984554924466, colsample_bytree: 0.8244160577135398, colsample_bylevel: 0.9786644099106183, reg_alpha: 0.031902234549004566, reg_lambda: 1.8723575427875105, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 3, learning_rate: 0.06243408656792147, n_estimators: 173, min_child_weight: 3, subsample: 0.5449989546519758, colsample_bytree: 0.8007062263866702, colsample_bylevel: 0.8061233330058671, reg_alpha: 0.00018478429548393532, reg_lambda: 1.0087628326587912, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 33, learning_rate: 0.37236487581254557, n_estimators: 923, min_child_weight: 20, subsample: 0.9676927755618308, colsample_bytree: 0.8503235520166503, colsample_bylevel: 0.9782657696674566, reg_alpha: 0.022355013075107007, reg_lambda: 2.465041494025497, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: XGBClassifier(), max_depth: 3, learning_rate: 0.45689558020947435, n_estimators: 226, min_child_weight: 7, subsample: 0.6479379980172523, colsample_bytree: 0.6457249950191193, colsample_bylevel: 0.7739351383177151, reg_alpha: 0.0001547758820288251, reg_lambda: 2.574415708066991, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 36, learning_rate: 0.07264292959254243, n_estimators: 1465, min_child_weight: 2, subsample: 0.6534385540482984, colsample_bytree: 0.7853934478961704, colsample_bylevel: 0.587637355559277, reg_alpha: 0.32471478826487365, reg_lambda: 2.0619261303880205, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 2, learning_rate: 0.18623504947187017, n_estimators: 261, min_child_weight: 12, subsample: 0.8203139833155411, colsample_bytree: 0.9727039226921457, colsample_bylevel: 0.7379651667270184, reg_alpha: 0.09094290730951683, reg_lambda: 1.706207810557758, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.4488627218681163, n_estimators: 242, min_child_weight: 3, subsample: 0.7869088330688009, colsample_bytree: 0.9179588939450538, colsample_bylevel: 0.6908808939215723, reg_alpha: 0.030329722102636875, reg_lambda: 2.7091781555856964, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 2, learning_rate: 0.2609178503119241, n_estimators: 1066, min_child_weight: 13, subsample: 0.6923574041211398, colsample_bytree: 0.7798965252706274, colsample_bylevel: 0.8005307190191707, reg_alpha: 0.0022280296054526553, reg_lambda: 2.5606286263555877, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 6, learning_rate: 0.15287643594102046, n_estimators: 1510, min_child_weight: 10, subsample: 0.8728727190499073, colsample_bytree: 0.5432425417982732, colsample_bylevel: 0.7010942342436819, reg_alpha: 0.8530424062822517, reg_lambda: 1.1333923098784455, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 360, min_child_weight: 3, subsample: 0.9940716093217477, colsample_bytree: 0.6355561410908421, colsample_bylevel: 0.552881214241574, reg_alpha: 0.00012465745944460077, reg_lambda: 1.7518558073343393, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 5, learning_rate: 0.09049932260372565, n_estimators: 1216, min_child_weight: 3, subsample: 0.9747024017430823, colsample_bytree: 0.6496454911361622, colsample_bylevel: 0.8195540311828022, reg_alpha: 0.00018863183421865195, reg_lambda: 1.0, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 118, min_child_weight: 1, subsample: 0.5, colsample_bytree: 0.9559577938180137, colsample_bylevel: 0.7163385600723872, reg_alpha: 0.0022805605319241935, reg_lambda: 1.0, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 6, subsample: 0.5, colsample_bytree: 0.8784405994598901, colsample_bylevel: 0.516607761901269, reg_alpha: 0.011391293128053778, reg_lambda: 2.035586871761429, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 5, learning_rate: 0.0001, n_estimators: 259, min_child_weight: 2, subsample: 0.6495890112731719, colsample_bytree: 1.0, colsample_bylevel: 0.6736353622564673, reg_alpha: 0.00019377668525848184, reg_lambda: 1.9668878080529786, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 22, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 6, subsample: 0.6404589326297906, colsample_bytree: 0.9067791904502519, colsample_bylevel: 0.8583833509519976, reg_alpha: 0.00012074578207768518, reg_lambda: 1.2956562641663694, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 50, learning_rate: 0.10240302806513212, n_estimators: 100, min_child_weight: 50, subsample: 1.0, colsample_bytree: 0.9948142663498789, colsample_bylevel: 0.8796439767021693, reg_alpha: 0.0001, reg_lambda: 2.8719831908377316, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 8, learning_rate: 0.10339348793539964, n_estimators: 121, min_child_weight: 3, subsample: 0.5791568705348975, colsample_bytree: 1.0, colsample_bylevel: 0.6989676506263433, reg_alpha: 0.00027285651324247264, reg_lambda: 1.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 22, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 13, subsample: 0.6100688032436145, colsample_bytree: 1.0, colsample_bylevel: 0.9151023897125247, reg_alpha: 0.06710264394383998, reg_lambda: 1.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 34, learning_rate: 0.5, n_estimators: 100, min_child_weight: 2, subsample: 0.8944313920312243, colsample_bytree: 1.0, colsample_bylevel: 0.6369194860963618, reg_alpha: 0.008733848223168247, reg_lambda: 1.0, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 8, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 45, subsample: 0.521899684726276, colsample_bytree: 0.5696453581150446, colsample_bylevel: 1.0, reg_alpha: 0.11701538807988202, reg_lambda: 1.2194314331411482, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 1, subsample: 0.5, colsample_bytree: 0.5, colsample_bylevel: 0.5, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 2, subsample: 0.5, colsample_bytree: 0.8395292946593076, colsample_bylevel: 0.5, reg_alpha: 0.0001, reg_lambda: 2.8254171443180365, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 112, min_child_weight: 2, subsample: 0.762037356469902, colsample_bytree: 0.8451380493193046, colsample_bylevel: 0.7747464733172423, reg_alpha: 0.0005721916761304783, reg_lambda: 2.9834336460650652, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 2, subsample: 0.5, colsample_bytree: 0.5, colsample_bylevel: 0.5, reg_alpha: 0.3704794143447448, reg_lambda: 3.133591795091082, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 1, subsample: 0.5, colsample_bytree: 0.5, colsample_bylevel: 0.5, reg_alpha: 0.0001, reg_lambda: 1.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.5, n_estimators: 454, min_child_weight: 1, subsample: 1.0, colsample_bytree: 0.5, colsample_bylevel: 0.5568949984178236, reg_alpha: 0.005228250215771465, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 14, learning_rate: 0.0001, n_estimators: 131, min_child_weight: 1, subsample: 0.5, colsample_bytree: 1.0, colsample_bylevel: 0.9675908966729874, reg_alpha: 0.0005604070328240068, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}', "{
model: XGBClassifier(), max_depth: 2, learning_rate: 0.0001, n_estimators: 206, min_child_weight: 3, subsample: 0.5, colsample_bytree: 0.7222219698509609, colsample_bylevel: 0.6162625681679033, reg_alpha: 0.0031133667188576264, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 33, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 2, subsample: 0.5, colsample_bytree: 1.0, colsample_bylevel: 0.8872903947638997, reg_alpha: 0.0031076925901489163, reg_lambda: 4.0, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}",
'{
model: XGBClassifier(), max_depth: 7, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 4, subsample: 1.0, colsample_bytree: 0.5, colsample_bylevel: 0.7344112961955547, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 12, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 2, subsample: 1.0, colsample_bytree: 0.5, colsample_bylevel: 0.8316438402475951, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 22, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 5, subsample: 1.0, colsample_bytree: 0.8155973893445074, colsample_bylevel: 0.5, reg_alpha: 0.1656038073934717, reg_lambda: 4.0, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.5, n_estimators: 1152, min_child_weight: 3, subsample: 1.0, colsample_bytree: 0.5, colsample_bylevel: 0.988976526232658, reg_alpha: 0.1679759169036272, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}',
'{
model: XGBClassifier(), max_depth: 50, learning_rate: 0.0001, n_estimators: 2000, min_child_weight: 1, subsample: 1.0, colsample_bytree: 0.5, colsample_bylevel: 1.0, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}',
'{
model: XGBClassifier(), max_depth: 50, learning_rate: 0.5, n_estimators: 2000, min_child_weight: 4, subsample: 0.5, colsample_bytree: 0.8474152416384718, colsample_bylevel: 1.0, reg_alpha: 0.016230849269712303, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 1, subsample: 0.5, colsample_bytree: 1.0, colsample_bylevel: 1.0, reg_alpha: 0.0001, reg_lambda: 1.0, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: OneHotEncoder()
}", "{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.0001, n_estimators: 1472, min_child_weight: 3, subsample: 0.6167158947652797, colsample_bytree: 0.8626040670024664, colsample_bylevel: 0.5, reg_alpha: 0.0001, reg_lambda: 1.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 5, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 6, subsample: 1.0, colsample_bytree: 1.0, colsample_bylevel: 0.5, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: XGBClassifier(), max_depth: 29, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 1, subsample: 0.5, colsample_bytree: 0.5, colsample_bylevel: 1.0, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(strategy='median'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 3, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 1, subsample: 0.7045714839233689, colsample_bytree: 0.6800769833186527, colsample_bylevel: 0.5, reg_alpha: 0.0019335820946301506, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 50, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 1, subsample: 0.5, colsample_bytree: 1.0, colsample_bylevel: 1.0, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}", "{
model: XGBClassifier(), max_depth: 16, learning_rate: 0.0001, n_estimators: 164, min_child_weight: 1, subsample: 0.5, colsample_bytree: 0.5, colsample_bylevel: 0.5, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: OneHotEncoder()
}", "{
model: XGBClassifier(), max_depth: 7, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 1, subsample: 0.5, colsample_bytree: 0.5, colsample_bylevel: 0.8283618049851271, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 4, learning_rate: 0.5, n_estimators: 100, min_child_weight: 1, subsample: 0.5, colsample_bytree: 0.5, colsample_bylevel: 0.5, reg_alpha: 1.0, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 9, learning_rate: 0.0001, n_estimators: 1546, min_child_weight: 1, subsample: 1.0, colsample_bytree: 0.5, colsample_bylevel: 0.636467040650577, reg_alpha: 0.03183917549601788, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 1, learning_rate: 0.5, n_estimators: 227, min_child_weight: 50, subsample: 0.5, colsample_bytree: 1.0, colsample_bylevel: 0.7848218168355854, reg_alpha: 0.0002536427732052701, reg_lambda: 1.0656031313029477, imputer: SimpleImputer(), scaler: None, encoder: OneHotEncoder()
}',
'{
model: XGBClassifier(), max_depth: 6, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 1, subsample: 1.0, colsample_bytree: 1.0, colsample_bylevel: 0.9322474174740314, reg_alpha: 0.002605929528092538, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}', "{
model: XGBClassifier(), max_depth: 50, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 1, subsample: 0.7627779298757693, colsample_bytree: 0.5, colsample_bylevel: 1.0, reg_alpha: 0.0001, reg_lambda: 4.0, imputer: SimpleImputer(strategy='most_frequent'), scaler: None, encoder: CustomOrdinalEncoder()
}",
'{
model: XGBClassifier(), max_depth: 50, learning_rate: 0.0001, n_estimators: 100, min_child_weight: 18, subsample: 1.0, colsample_bytree: 1.0, colsample_bylevel: 0.5, reg_alpha: 0.16972962892882168, reg_lambda: 4.0, imputer: SimpleImputer(), scaler: None, encoder: CustomOrdinalEncoder()
}']